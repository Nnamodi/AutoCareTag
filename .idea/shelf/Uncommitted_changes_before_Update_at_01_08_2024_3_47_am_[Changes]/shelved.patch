Index: app/src/main/res/drawable/manage_icon.xml
===================================================================
diff --git a/app/src/main/res/drawable/manage_icon.xml b/app/src/main/res/drawable/manage_icon.xml
deleted file mode 100644
--- a/app/src/main/res/drawable/manage_icon.xml	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ /dev/null	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="25dp"
-    android:height="24dp"
-    android:viewportHeight="25"
-    android:viewportWidth="24">
-
-        <path android:pathData="M10.5 3H3.5V12H10.5V3Z"
-            android:strokeColor="#A3A3A3"
-            android:strokeWidth="2"
-            android:strokeLineCap="round"
-            android:strokeLineJoin="round" />
-
-        <path android:pathData="M21.5 3H14.5V8H21.5V3Z"
-            android:strokeColor="#A3A3A3"
-            android:strokeWidth="2"
-            android:strokeLineCap="round"
-            android:strokeLineJoin="round" />
-
-        <path android:pathData="M21.5 12H14.5V21H21.5V12Z"
-            android:strokeColor="#A3A3A3"
-            android:strokeWidth="2"
-            android:strokeLineCap="round"
-            android:strokeLineJoin="round" />
-
-        <path android:pathData="M10.5 16H3.5V21H10.5V16Z"
-            android:strokeColor="#A3A3A3"
-            android:strokeWidth="2"
-            android:strokeLineCap="round"
-            android:strokeLineJoin="round" />
-
-</vector>
Index: app/src/main/res/values/colors.xml
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
deleted file mode 100644
--- a/app/src/main/res/values/colors.xml	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ /dev/null	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <color name="purple_200">#FFBB86FC</color>
-    <color name="purple_500">#FF6200EE</color>
-    <color name="purple_700">#FF3700B3</color>
-    <color name="teal_200">#FF03DAC5</color>
-    <color name="teal_700">#FF018786</color>
-    <color name="black">#FF000000</color>
-    <color name="white">#FFFFFFFF</color>
-</resources>
\ No newline at end of file
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/screens/NavDrawer.kt
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/NavDrawer.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/NavDrawer.kt
deleted file mode 100644
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/NavDrawer.kt	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ /dev/null	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
@@ -1,11 +0,0 @@
-package dev.borisochieng.autocaretag.ui.screens
-
-import androidx.compose.material3.ModalNavigationDrawer
-import androidx.compose.runtime.Composable
-
-@Composable
-fun NavDrawer() {
-    ModalNavigationDrawer(drawerContent = {}) {
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui.commons\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.annotation.DrawableRes\r\nimport androidx.annotation.StringRes\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.material3.TopAppBarState\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.collectAsState\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.painter.Painter\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.NavGraph.Companion.findStartDestination\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport dev.borisochieng.autocaretag.R\r\nimport dev.borisochieng.autocaretag.ui.navigation.AppRoute\r\nimport dev.borisochieng.autocaretag.ui.navigation.Screens\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.colorScheme\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun TopBar(\r\n\ttitle: String,\r\n\tnavigate: (Screens) -> Unit\r\n) {\r\n\tTopAppBar(\r\n\t\ttitle = { Text(title) },\r\n\t\tnavigationIcon = {\r\n\t\t\tIconButton(onClick = { navigate(Screens.Back) }) {\r\n\t\t\t\tIcon(\r\n\t\t\t\t\tpainter = painterResource(R.drawable.back_arrow_icon),\r\n\t\t\t\t\tcontentDescription = stringResource(R.string.back)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n}\r\n\r\n@SuppressLint(\"RestrictedApi\")\r\n@Composable\r\nfun NavBar(\r\n\tnavController: NavController,\r\n\tmodifier: Modifier = Modifier\r\n) {\r\n\tval navBackStackEntry = navController.currentBackStackEntryAsState()\r\n\tval currentRoute = navBackStackEntry.value?.destination?.route\r\n\tval backStack = navController.currentBackStack.collectAsState().value.map { it.destination.route }\r\n\r\n\tRow(\r\n\t\tmodifier = modifier\r\n\t\t\t.fillMaxWidth()\r\n\t\t\t.padding(16.dp),\r\n\t\thorizontalArrangement = Arrangement.Center,\r\n\t\tverticalAlignment = Alignment.CenterVertically\r\n\t) {\r\n\t\tNavBarItems.entries.forEach { item ->\r\n\t\t\tval inBackStack = item.route == currentRoute || item.route in backStack\r\n\t\t\tval selected = when (item) {\r\n\t\t\t\tNavBarItems.Home -> {\r\n\t\t\t\t\tval noHomeScreenInStack = NavBarItems.entries.filter { it != NavBarItems.Home }\r\n\t\t\t\t\t\t.all { it.route !in backStack }\r\n\t\t\t\t\tinBackStack && noHomeScreenInStack\r\n\t\t\t\t}\r\n\t\t\t\telse -> inBackStack\r\n\t\t\t}\r\n\r\n\t\t\tNavigationBarItem(\r\n\t\t\t\tselected = selected,\r\n\t\t\t\ticon = painterResource(item.icon),\r\n\t\t\t\tlabel = stringResource(item.title),\r\n\t\t\t\tmodifier = Modifier.weight(1f),\r\n\t\t\t\tonClick = {\r\n\t\t\t\t\tnavController.navigate(item.route) {\r\n\t\t\t\t\t\tpopUpTo(navController.graph.findStartDestination().id) {\r\n\t\t\t\t\t\t\tsaveState = item.route != currentRoute\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlaunchSingleTop = true\r\n\t\t\t\t\t\trestoreState = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@Composable\r\nprivate fun NavigationBarItem(\r\n\tselected: Boolean,\r\n\ticon: Painter,\r\n\tlabel: String,\r\n\tmodifier: Modifier = Modifier,\r\n\tonClick: () -> Unit\r\n) {\r\n\tval color = if (selected) colorScheme.primary else colorScheme.onBackgroundVariant\r\n\r\n\tColumn(\r\n\t\tmodifier = modifier\r\n\t\t\t.fillMaxWidth()\r\n\t\t\t.padding(horizontal = 8.dp)\r\n\t\t\t.clickable { onClick() }\r\n\t\t\t.padding(vertical = 6.dp),\r\n\t\thorizontalAlignment = Alignment.CenterHorizontally\r\n\t) {\r\n\t\tIcon(\r\n\t\t\tpainter = icon,\r\n\t\t\tcontentDescription = label,\r\n\t\t\tmodifier = Modifier.padding(start = 12.5.dp, end = 12.5.dp, bottom = 4.dp),\r\n\t\t\ttint = color\r\n\t\t)\r\n\t\tText(text = label, color = color)\r\n\t}\r\n}\r\n\r\nprivate enum class NavBarItems(\r\n\t@StringRes val title: Int,\r\n\t@DrawableRes val icon: Int,\r\n\tval route: String\r\n) {\r\n\tHome(\r\n\t\ttitle = R.string.home,\r\n\t\ticon = R.drawable.home_icon,\r\n\t\troute = AppRoute.HomeScreen.route\r\n\t),\r\n//\tAdd(\r\n//\t\ttitle = R.string.add,\r\n//\t\ticon = R.drawable.add_icon,\r\n//\t\troute = AppRoute.AddScreen.route\r\n//\t),\r\n\tManage(\r\n\t\ttitle = R.string.clients,\r\n\t\ticon = R.drawable.ic_user,\r\n\t\troute = AppRoute.ManageScreen.route\r\n\t)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt	(date 1722463530141)
@@ -3,7 +3,6 @@
 import android.annotation.SuppressLint
 import androidx.annotation.DrawableRes
 import androidx.annotation.StringRes
-import androidx.compose.foundation.background
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Column
@@ -15,7 +14,6 @@
 import androidx.compose.material3.IconButton
 import androidx.compose.material3.Text
 import androidx.compose.material3.TopAppBar
-import androidx.compose.material3.TopAppBarState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.collectAsState
 import androidx.compose.ui.Alignment
@@ -136,14 +134,14 @@
 		icon = R.drawable.home_icon,
 		route = AppRoute.HomeScreen.route
 	),
-//	Add(
-//		title = R.string.add,
-//		icon = R.drawable.add_icon,
-//		route = AppRoute.AddScreen.route
-//	),
-	Manage(
+	Clients(
 		title = R.string.clients,
 		icon = R.drawable.ic_user,
 		route = AppRoute.ManageScreen.route
+	),
+	More(
+		title = R.string.more,
+		icon = R.drawable.more_icon,
+		route = AppRoute.MoreScreen.route
 	)
 }
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/screens/HomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui.screens\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.border\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Close\r\nimport androidx.compose.material.icons.rounded.Info\r\nimport androidx.compose.material.icons.rounded.Menu\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.DrawerValue\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.ModalDrawerSheet\r\nimport androidx.compose.material3.ModalNavigationDrawer\r\nimport androidx.compose.material3.NavigationDrawerItem\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.material3.rememberDrawerState\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.rememberCoroutineScope\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.res.vectorResource\r\nimport androidx.compose.ui.text.SpanStyle\r\nimport androidx.compose.ui.text.buildAnnotatedString\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.withStyle\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport dev.borisochieng.autocaretag.R\r\nimport dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel\r\nimport dev.borisochieng.autocaretag.room_db.Client\r\nimport dev.borisochieng.autocaretag.ui.components.ReadDialog\r\nimport dev.borisochieng.autocaretag.ui.components.ClientCard\r\nimport dev.borisochieng.autocaretag.ui.components.ScreenTitle\r\nimport dev.borisochieng.autocaretag.ui.navigation.Screens\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.colorScheme\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.shape\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.typography\r\nimport dev.borisochieng.autocaretag.utils.Dummies.fakeClients\r\nimport kotlinx.coroutines.launch\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun HomeScreen(\r\n    clients: List<Client>,\r\n    viewModel: NFCReaderViewModel,\r\n    scanForNFCTag: () -> Unit,\r\n    navigate: (Screens) -> Unit\r\n) {\r\n    var isReadDialogVisible by remember {\r\n        mutableStateOf(false)\r\n    }\r\n    if (isReadDialogVisible) {\r\n        ReadDialog(viewModel = viewModel, onCancel = { isReadDialogVisible = false }, navigate = navigate  )\r\n    }\r\n    val drawerState = rememberDrawerState(initialValue = DrawerValue.Closed)\r\n    val coroutineScope = rememberCoroutineScope()\r\n\r\n    ModalNavigationDrawer(\r\n        drawerState = drawerState,\r\n        drawerContent = {\r\n            ModalDrawerSheet {\r\n                ScreenTitle()\r\n                NavigationDrawerItem(\r\n                    modifier = Modifier.padding(4.dp),\r\n                    label = { Text(text = \"Help\", style = typography.bodyLarge) },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ },\r\n                    icon = { Icon(Icons.Rounded.Info, contentDescription = \"Help\") }\r\n                )\r\n                NavigationDrawerItem(\r\n                    modifier = Modifier.padding(4.dp),\r\n                    label = { Text(text = \"About Us\", style = typography.bodyLarge) },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ },\r\n                    icon = { Icon(Icons.Rounded.Info, contentDescription = \"Help\") }\r\n                )\r\n                NavigationDrawerItem(\r\n                    modifier = Modifier.padding(4.dp),\r\n                    label = {\r\n                        Text(\r\n                            text = \"Rate this app\",\r\n                            style = typography.bodyLarge\r\n                        )\r\n                    },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ },\r\n                    icon = { Icon(Icons.Rounded.Info, contentDescription = \"Help\") }\r\n                )\r\n            }\r\n        }) {\r\n        val icon = if (drawerState.isOpen) Icons.Rounded.Close else Icons.Rounded.Menu\r\n        Scaffold(\r\n            modifier = Modifier.background(colorScheme.background),\r\n            topBar = {\r\n                TopAppBar(\r\n                    modifier = Modifier.background(colorScheme.background),\r\n                    title = {\r\n                        Box(\r\n                            modifier = Modifier\r\n                                .fillMaxWidth()\r\n                                .padding(8.dp),\r\n                            contentAlignment = Alignment.Center\r\n                        ) {\r\n                            ScreenTitle()\r\n                        }\r\n                    },\r\n                    navigationIcon = {\r\n                        IconButton(onClick = {\r\n                            coroutineScope.launch {\r\n                                if (drawerState.isOpen) {\r\n                                    drawerState.close()\r\n                                } else {\r\n                                    drawerState.open()\r\n                                }\r\n                            }\r\n\r\n                        }) {\r\n\r\n                            Icon(icon, contentDescription = if (drawerState.isOpen) \"Close\" else \"Menu\" )\r\n\r\n\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        ) { innerPadding ->\r\n            LazyColumn(\r\n                modifier = Modifier\r\n                    .padding(innerPadding)\r\n                    .padding(top = 8.dp),\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n            ) {\r\n                item {\r\n                    Box(\r\n                        modifier = Modifier\r\n                            .size(200.dp)\r\n                            .border(\r\n                                width = 1.dp,\r\n                                color = colorScheme.primary,\r\n                                shape = CircleShape\r\n                            )\r\n                            .background(\r\n                                color = Color.Transparent,\r\n                                shape = CircleShape\r\n                            )\r\n                            .clickable {\r\n                                isReadDialogVisible = true\r\n                                scanForNFCTag()\r\n                            },\r\n                        contentAlignment = Alignment.Center\r\n                    ) {\r\n                        Text(\r\n                            modifier = Modifier\r\n                                .padding(4.dp),\r\n                            text = stringResource(R.string.tap_to_scan_nfc_tag),\r\n                            style = typography.title,\r\n                        )\r\n                    }\r\n                }\r\n\r\n                item {\r\n                    Row(\r\n                        modifier = Modifier.padding(vertical = 16.dp),\r\n                        verticalAlignment = Alignment.CenterVertically,\r\n                        horizontalArrangement = Arrangement.SpaceBetween\r\n                    )\r\n                    {\r\n\r\n                        Text(\r\n                            text = stringResource(R.string.nfc_status),\r\n                            modifier = Modifier\r\n                                .padding(vertical = 2.dp)\r\n                                .align(Alignment.CenterVertically),\r\n                            style = typography.body,\r\n                            fontWeight = FontWeight.SemiBold\r\n                        )\r\n\r\n                        Spacer(\r\n                            modifier = Modifier\r\n                                .padding(horizontal = 4.dp, vertical = 2.dp)\r\n                                .size(6.dp)\r\n                                .background(colorScheme.onBackgroundVariant, shape = CircleShape)\r\n                        )\r\n                    }\r\n                }\r\n\r\n                item {\r\n                    Button(\r\n                        modifier = Modifier\r\n                            .padding(horizontal = 16.dp)\r\n                            .fillMaxWidth()\r\n                            .height(50.dp),\r\n                        onClick = {\r\n                            navigate(Screens.AddScreen)\r\n                        } ,\r\n                        shape = shape.button,\r\n                        colors = ButtonDefaults.buttonColors(\r\n                            containerColor = colorScheme.primary,\r\n                            contentColor = Color.White\r\n                        ),\r\n                    ) {\r\n                        Row(\r\n                            verticalAlignment = Alignment.CenterVertically,\r\n                            horizontalArrangement = Arrangement.Absolute.SpaceBetween\r\n                        ) {\r\n                            Icon(\r\n                                imageVector = ImageVector.vectorResource(id = R.drawable.ic_add),\r\n                                contentDescription = stringResource(\r\n                                    id = R.string.scan_nfc\r\n                                )\r\n                            )\r\n                            Text(\r\n                                text = stringResource(R.string.add_client),\r\n                                style = typography.bodyLarge\r\n                            )\r\n\r\n                        }\r\n                    }\r\n                }\r\n\r\n                item {\r\n                    Row(\r\n                        modifier = Modifier.padding(\r\n                            start = 16.dp,\r\n                            top = 24.dp,\r\n                            bottom = 16.dp,\r\n                            end = 24.dp\r\n                        ),\r\n                        verticalAlignment = Alignment.CenterVertically,\r\n                        horizontalArrangement = Arrangement.SpaceBetween\r\n                    ) {\r\n                        Text(\r\n                            modifier = Modifier.weight(1f),\r\n                            text = stringResource(R.string.recent_activity),\r\n                            style = typography.title,\r\n                            color = colorScheme.primary\r\n                        )\r\n\r\n                        Text(\r\n                            text = stringResource(R.string.view_all),\r\n                            style = typography.body,\r\n                            color = colorScheme.primary,\r\n                            modifier = Modifier\r\n                                .clickable(\r\n                                    onClick = {\r\n                                        navigate(Screens.ManageScreen)\r\n                                    }\r\n                                )\r\n                        )\r\n                    }\r\n                }\r\n                if (clients.isNotEmpty()) {\r\n                    items(items = clients) { client ->\r\n                        ClientCard(client = client, navigate = {Screens.ClientDetailsScreen(client.clientId)})\r\n                    }\r\n                } else {\r\n                    item {\r\n                        Box(\r\n                            modifier = Modifier.fillMaxSize(),\r\n                            contentAlignment = Alignment.Center\r\n                        ) {\r\n                            Text(\r\n                                text = stringResource(R.string.no_activity),\r\n                                style = typography.bodyLarge,\r\n                                modifier = Modifier\r\n                                    .align(Alignment.Center)\r\n                                    .fillMaxWidth()\r\n                                    .padding(16.dp)\r\n                            )\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun HomeScreenPreview() {\r\n    HomeScreen(\r\n        clients = fakeClients,\r\n        viewModel(),\r\n        {}\r\n    ) {}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/HomeScreen.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/HomeScreen.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/HomeScreen.kt	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/HomeScreen.kt	(date 1722467539275)
@@ -15,28 +15,17 @@
 import androidx.compose.foundation.lazy.LazyColumn
 import androidx.compose.foundation.lazy.items
 import androidx.compose.foundation.shape.CircleShape
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.rounded.Close
-import androidx.compose.material.icons.rounded.Info
-import androidx.compose.material.icons.rounded.Menu
 import androidx.compose.material3.Button
 import androidx.compose.material3.ButtonDefaults
-import androidx.compose.material3.DrawerValue
 import androidx.compose.material3.ExperimentalMaterial3Api
 import androidx.compose.material3.Icon
-import androidx.compose.material3.IconButton
-import androidx.compose.material3.ModalDrawerSheet
-import androidx.compose.material3.ModalNavigationDrawer
-import androidx.compose.material3.NavigationDrawerItem
 import androidx.compose.material3.Scaffold
 import androidx.compose.material3.Text
 import androidx.compose.material3.TopAppBar
-import androidx.compose.material3.rememberDrawerState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
-import androidx.compose.runtime.rememberCoroutineScope
 import androidx.compose.runtime.setValue
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
@@ -44,25 +33,21 @@
 import androidx.compose.ui.graphics.vector.ImageVector
 import androidx.compose.ui.res.stringResource
 import androidx.compose.ui.res.vectorResource
-import androidx.compose.ui.text.SpanStyle
-import androidx.compose.ui.text.buildAnnotatedString
 import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.withStyle
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.lifecycle.viewmodel.compose.viewModel
 import dev.borisochieng.autocaretag.R
 import dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel
 import dev.borisochieng.autocaretag.room_db.Client
-import dev.borisochieng.autocaretag.ui.components.ReadDialog
 import dev.borisochieng.autocaretag.ui.components.ClientCard
+import dev.borisochieng.autocaretag.ui.components.ReadDialog
 import dev.borisochieng.autocaretag.ui.components.ScreenTitle
 import dev.borisochieng.autocaretag.ui.navigation.Screens
 import dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.colorScheme
 import dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.shape
 import dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.typography
 import dev.borisochieng.autocaretag.utils.Dummies.fakeClients
-import kotlinx.coroutines.launch
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
@@ -78,232 +63,175 @@
     if (isReadDialogVisible) {
         ReadDialog(viewModel = viewModel, onCancel = { isReadDialogVisible = false }, navigate = navigate  )
     }
-    val drawerState = rememberDrawerState(initialValue = DrawerValue.Closed)
-    val coroutineScope = rememberCoroutineScope()
 
-    ModalNavigationDrawer(
-        drawerState = drawerState,
-        drawerContent = {
-            ModalDrawerSheet {
-                ScreenTitle()
-                NavigationDrawerItem(
-                    modifier = Modifier.padding(4.dp),
-                    label = { Text(text = "Help", style = typography.bodyLarge) },
-                    selected = false,
-                    onClick = { /*TODO*/ },
-                    icon = { Icon(Icons.Rounded.Info, contentDescription = "Help") }
-                )
-                NavigationDrawerItem(
-                    modifier = Modifier.padding(4.dp),
-                    label = { Text(text = "About Us", style = typography.bodyLarge) },
-                    selected = false,
-                    onClick = { /*TODO*/ },
-                    icon = { Icon(Icons.Rounded.Info, contentDescription = "Help") }
-                )
-                NavigationDrawerItem(
-                    modifier = Modifier.padding(4.dp),
-                    label = {
-                        Text(
-                            text = "Rate this app",
-                            style = typography.bodyLarge
-                        )
-                    },
-                    selected = false,
-                    onClick = { /*TODO*/ },
-                    icon = { Icon(Icons.Rounded.Info, contentDescription = "Help") }
-                )
-            }
-        }) {
-        val icon = if (drawerState.isOpen) Icons.Rounded.Close else Icons.Rounded.Menu
-        Scaffold(
-            modifier = Modifier.background(colorScheme.background),
-            topBar = {
-                TopAppBar(
-                    modifier = Modifier.background(colorScheme.background),
-                    title = {
-                        Box(
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(8.dp),
-                            contentAlignment = Alignment.Center
-                        ) {
-                            ScreenTitle()
-                        }
-                    },
-                    navigationIcon = {
-                        IconButton(onClick = {
-                            coroutineScope.launch {
-                                if (drawerState.isOpen) {
-                                    drawerState.close()
-                                } else {
-                                    drawerState.open()
-                                }
-                            }
-
-                        }) {
-
-                            Icon(icon, contentDescription = if (drawerState.isOpen) "Close" else "Menu" )
-
-
-                        }
-                    }
-                )
-            }
-        ) { innerPadding ->
-            LazyColumn(
-                modifier = Modifier
-                    .padding(innerPadding)
-                    .padding(top = 8.dp),
-                horizontalAlignment = Alignment.CenterHorizontally
-            ) {
-                item {
-                    Box(
-                        modifier = Modifier
-                            .size(200.dp)
-                            .border(
-                                width = 1.dp,
-                                color = colorScheme.primary,
-                                shape = CircleShape
-                            )
-                            .background(
-                                color = Color.Transparent,
-                                shape = CircleShape
-                            )
-                            .clickable {
-                                isReadDialogVisible = true
-                                scanForNFCTag()
-                            },
-                        contentAlignment = Alignment.Center
-                    ) {
-                        Text(
-                            modifier = Modifier
-                                .padding(4.dp),
-                            text = stringResource(R.string.tap_to_scan_nfc_tag),
-                            style = typography.title,
-                        )
-                    }
-                }
+    Scaffold(
+        modifier = Modifier.background(colorScheme.background),
+        topBar = {
+            TopAppBar(
+                modifier = Modifier.background(colorScheme.background),
+                title = {
+                    Box(
+                        modifier = Modifier
+                            .fillMaxWidth()
+                            .padding(8.dp),
+                        contentAlignment = Alignment.Center
+                    ) {
+                        ScreenTitle()
+                    }
+                }
+            )
+        }
+    ) { innerPadding ->
+        LazyColumn(
+            modifier = Modifier
+                .padding(innerPadding)
+                .padding(top = 8.dp),
+            horizontalAlignment = Alignment.CenterHorizontally
+        ) {
+            item {
+                Box(
+                    modifier = Modifier
+                        .size(200.dp)
+                        .border(
+                            width = 1.dp,
+                            color = colorScheme.primary,
+                            shape = CircleShape
+                        )
+                        .background(
+                            color = Color.Transparent,
+                            shape = CircleShape
+                        )
+                        .clickable {
+                            isReadDialogVisible = true
+                            scanForNFCTag()
+                        },
+                    contentAlignment = Alignment.Center
+                ) {
+                    Text(
+                        modifier = Modifier
+                            .padding(4.dp),
+                        text = stringResource(R.string.tap_to_scan_nfc_tag),
+                        style = typography.title,
+                    )
+                }
+            }
 
-                item {
-                    Row(
-                        modifier = Modifier.padding(vertical = 16.dp),
-                        verticalAlignment = Alignment.CenterVertically,
-                        horizontalArrangement = Arrangement.SpaceBetween
-                    )
-                    {
+            item {
+                Row(
+                    modifier = Modifier.padding(vertical = 16.dp),
+                    verticalAlignment = Alignment.CenterVertically,
+                    horizontalArrangement = Arrangement.SpaceBetween
+                )
+                {
 
-                        Text(
-                            text = stringResource(R.string.nfc_status),
-                            modifier = Modifier
-                                .padding(vertical = 2.dp)
-                                .align(Alignment.CenterVertically),
-                            style = typography.body,
-                            fontWeight = FontWeight.SemiBold
-                        )
+                    Text(
+                        text = stringResource(R.string.nfc_status),
+                        modifier = Modifier
+                            .padding(vertical = 2.dp)
+                            .align(Alignment.CenterVertically),
+                        style = typography.body,
+                        fontWeight = FontWeight.SemiBold
+                    )
 
-                        Spacer(
-                            modifier = Modifier
-                                .padding(horizontal = 4.dp, vertical = 2.dp)
-                                .size(6.dp)
-                                .background(colorScheme.onBackgroundVariant, shape = CircleShape)
-                        )
-                    }
-                }
+                    Spacer(
+                        modifier = Modifier
+                            .padding(horizontal = 4.dp, vertical = 2.dp)
+                            .size(6.dp)
+                            .background(colorScheme.onBackgroundVariant, shape = CircleShape)
+                    )
+                }
+            }
 
-                item {
-                    Button(
-                        modifier = Modifier
-                            .padding(horizontal = 16.dp)
-                            .fillMaxWidth()
-                            .height(50.dp),
-                        onClick = {
-                            navigate(Screens.AddScreen)
-                        } ,
-                        shape = shape.button,
-                        colors = ButtonDefaults.buttonColors(
-                            containerColor = colorScheme.primary,
-                            contentColor = Color.White
-                        ),
-                    ) {
-                        Row(
-                            verticalAlignment = Alignment.CenterVertically,
-                            horizontalArrangement = Arrangement.Absolute.SpaceBetween
-                        ) {
-                            Icon(
-                                imageVector = ImageVector.vectorResource(id = R.drawable.ic_add),
-                                contentDescription = stringResource(
-                                    id = R.string.scan_nfc
-                                )
-                            )
-                            Text(
-                                text = stringResource(R.string.add_client),
-                                style = typography.bodyLarge
-                            )
+            item {
+                Button(
+                    modifier = Modifier
+                        .padding(horizontal = 16.dp)
+                        .fillMaxWidth()
+                        .height(50.dp),
+                    onClick = {
+                        navigate(Screens.AddScreen)
+                    } ,
+                    shape = shape.button,
+                    colors = ButtonDefaults.buttonColors(
+                        containerColor = colorScheme.primary,
+                        contentColor = Color.White
+                    ),
+                ) {
+                    Row(
+                        verticalAlignment = Alignment.CenterVertically,
+                        horizontalArrangement = Arrangement.Absolute.SpaceBetween
+                    ) {
+                        Icon(
+                            imageVector = ImageVector.vectorResource(id = R.drawable.ic_add),
+                            contentDescription = stringResource(
+                                id = R.string.scan_nfc
+                            )
+                        )
+                        Text(
+                            text = stringResource(R.string.add_client),
+                            style = typography.bodyLarge
+                        )
 
-                        }
-                    }
-                }
+                    }
+                }
+            }
 
-                item {
-                    Row(
-                        modifier = Modifier.padding(
-                            start = 16.dp,
-                            top = 24.dp,
-                            bottom = 16.dp,
-                            end = 24.dp
-                        ),
-                        verticalAlignment = Alignment.CenterVertically,
-                        horizontalArrangement = Arrangement.SpaceBetween
-                    ) {
-                        Text(
-                            modifier = Modifier.weight(1f),
-                            text = stringResource(R.string.recent_activity),
-                            style = typography.title,
-                            color = colorScheme.primary
-                        )
+            item {
+                Row(
+                    modifier = Modifier.padding(
+                        start = 16.dp,
+                        top = 24.dp,
+                        bottom = 16.dp,
+                        end = 24.dp
+                    ),
+                    verticalAlignment = Alignment.CenterVertically,
+                    horizontalArrangement = Arrangement.SpaceBetween
+                ) {
+                    Text(
+                        modifier = Modifier.weight(1f),
+                        text = stringResource(R.string.recent_activity),
+                        style = typography.title,
+                        color = colorScheme.primary
+                    )
 
-                        Text(
-                            text = stringResource(R.string.view_all),
-                            style = typography.body,
-                            color = colorScheme.primary,
-                            modifier = Modifier
-                                .clickable(
-                                    onClick = {
-                                        navigate(Screens.ManageScreen)
-                                    }
-                                )
-                        )
-                    }
-                }
-                if (clients.isNotEmpty()) {
-                    items(items = clients) { client ->
-                        ClientCard(client = client, navigate = {Screens.ClientDetailsScreen(client.clientId)})
-                    }
-                } else {
-                    item {
-                        Box(
-                            modifier = Modifier.fillMaxSize(),
-                            contentAlignment = Alignment.Center
-                        ) {
-                            Text(
-                                text = stringResource(R.string.no_activity),
-                                style = typography.bodyLarge,
-                                modifier = Modifier
-                                    .align(Alignment.Center)
-                                    .fillMaxWidth()
-                                    .padding(16.dp)
-                            )
-                        }
-                    }
+                    Text(
+                        text = stringResource(R.string.view_all),
+                        style = typography.body,
+                        color = colorScheme.primary,
+                        modifier = Modifier
+                            .clickable(
+                                onClick = {
+                                    navigate(Screens.ManageScreen)
+                                }
+                            )
+                    )
+                }
+            }
+            if (clients.isNotEmpty()) {
+                items(items = clients) { client ->
+                    ClientCard(client = client, navigate = {Screens.ClientDetailsScreen(client.clientId)})
+                }
+            } else {
+                item {
+                    Box(
+                        modifier = Modifier.fillMaxSize(),
+                        contentAlignment = Alignment.Center
+                    ) {
+                        Text(
+                            text = stringResource(R.string.no_activity),
+                            style = typography.bodyLarge,
+                            modifier = Modifier
+                                .align(Alignment.Center)
+                                .fillMaxWidth()
+                                .padding(16.dp)
+                        )
+                    }
+                }
 
-                }
+            }
 
-            }
-
-
         }
     }
-
 }
 
 @Preview(showBackground = true)
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">AutoCareTag</string>\r\n    <string name=\"home\">Home</string>\r\n    <string name=\"add\">Add</string>\r\n    <string name=\"clients\">Clients</string>\r\n    <string name=\"notifications\">Notifications</string>\r\n    <string name=\"scan_nfc\">Scan NFC</string>\r\n    <string name=\"client_avatar\">Client Avatar</string>\r\n    <string name=\"view_details\">Scan Tag</string>\r\n    <string name=\"auto\">Auto</string>\r\n    <string name=\"care\">Care</string>\r\n    <string name=\"recent_activity\">Recent Activity</string>\r\n    <string name=\"note\">Note</string>\r\n    <string name=\"note_placeholder\">Suspension gear is worn out and needs to be replaced in few months.</string>\r\n    <string name=\"name\">Name</string>\r\n    <string name=\"contact\">Contact</string>\r\n    <string name=\"vehicle\">Vehicle</string>\r\n    <string name=\"car_model\">Car model</string>\r\n    <string name=\"last_issue_resolved\">Last issue resolved</string>\r\n    <string name=\"last_appointment\">Last appointment</string>\r\n    <string name=\"update\">Update</string>\r\n    <string name=\"back\">Back</string>\r\n    <string name=\"write_to_nfc\">Add Client</string>\r\n    <string name=\"navigate_up\">Back</string>\r\n    <string name=\"add_screen_title\">Client Details</string>\r\n    <string name=\"name_label\">Name</string>\r\n    <string name=\"name_placeholder\">Enter name of vehicle owner</string>\r\n    <string name=\"contact_label\">Contact Details</string>\r\n    <string name=\"contact_placeholder\">+254 7123 4567</string>\r\n    <string name=\"vehicle_model_label\">Vehicle Model</string>\r\n    <string name=\"vehicle_model_placeholder\">e.g Toyota LandCruiser TX</string>\r\n    <string name=\"appointment_date\">Appointment Date</string>\r\n    <string name=\"repair_label\">Maintenance Done</string>\r\n    <string name=\"repair_placeholder\">e.g Oil Change</string>\r\n    <string name=\"appointment_date_label\">Appointment Date</string>\r\n    <string name=\"appointment_date_placeholder\">DD MMMM YYYY</string>\r\n    <string name=\"next_appointment_date_label\">Next Appointment Date</string>\r\n    <string name=\"next_appointment_date_placeholder\">DD MMMM YYYY</string>\r\n    <string name=\"bt_write_to_nfc\">Upload</string>\r\n    <string name=\"view_all\">View all</string>\r\n    <string name=\"add_client\">Add client</string>\r\n    <string name=\"no_recent_activity\">No recent Activity</string>\r\n    <string name=\"no_activity\">No activity</string>\r\n    <string name=\"tap_to_scan_nfc_tag\">Tap to Scan \\n NFC tag</string>\r\n    <string name=\"nfc_status\">NFC Status</string>\r\n    <string name=\"vehicle_details\">Vehicle Details</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/res/values/strings.xml	(date 1722467262134)
@@ -44,4 +44,9 @@
     <string name="tap_to_scan_nfc_tag">Tap to Scan \n NFC tag</string>
     <string name="nfc_status">NFC Status</string>
     <string name="vehicle_details">Vehicle Details</string>
+    <string name="more">More</string>
+    <string name="coming_soon">Coming soon...</string>
+    <string name="help">Help</string>
+    <string name="about">About us</string>
+    <string name="rate_app">Rate this app</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n\r\n    <style name=\"Theme.AutoCareTag\" parent=\"android:Theme.Material.Light.NoActionBar\" />\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/res/values/themes.xml	(date 1722480166493)
@@ -1,5 +1,17 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
+    <color name="primaryColor">#FFFFFF</color>
+
+    // App theme
+    <style name="Theme.AutoCareTag" parent="Theme.AppCompat.Light.NoActionBar" />
 
-    <style name="Theme.AutoCareTag" parent="android:Theme.Material.Light.NoActionBar" />
-</resources>
\ No newline at end of file
+    // Splash theme
+    <style name="Theme.Splash" parent="Theme.SplashScreen">
+        <item name="android:colorPrimary">@color/primaryColor</item>
+        <item name="windowSplashScreenBackground">@color/primaryColor</item>
+        <item name="windowSplashScreenAnimatedIcon">@drawable/app_logo</item>
+        <item name="android:windowSplashScreenBehavior">icon_preferred</item>
+        <item name="postSplashScreenTheme">@style/Theme.AutoCareTag</item>
+    </style>
+
+</resources>
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/components/ScreenTitle.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui.components\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.IntrinsicSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.SpanStyle\r\nimport androidx.compose.ui.text.buildAnnotatedString\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.text.withStyle\r\nimport androidx.compose.ui.unit.dp\r\nimport dev.borisochieng.autocaretag.R\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.colorScheme\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.typography\r\n\r\n@Composable\r\nfun ScreenTitle(\r\n    modifier: Modifier = Modifier\r\n) {\r\n    val title = buildAnnotatedString {\r\n        withStyle(\r\n            style = SpanStyle(\r\n                color = colorScheme.onBackground\r\n            )\r\n        ) {\r\n            append(stringResource(R.string.auto))\r\n        }\r\n        withStyle(\r\n            style = SpanStyle(\r\n                color = colorScheme.primary\r\n            )\r\n        ) {\r\n            append(stringResource(R.string.care))\r\n        }\r\n    }\r\n    Box(\r\n        modifier = modifier\r\n            .padding(4.dp)\r\n            .fillMaxWidth(),\r\n        contentAlignment = Alignment.Center\r\n    ) {\r\n        Text(\r\n            modifier = Modifier.align(Alignment.Center),\r\n            text = title,\r\n            style = typography.titleLarge,\r\n            textAlign = TextAlign.Center,\r\n        )\r\n\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/components/ScreenTitle.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/components/ScreenTitle.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/components/ScreenTitle.kt	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/components/ScreenTitle.kt	(date 1722467910588)
@@ -1,11 +1,8 @@
 package dev.borisochieng.autocaretag.ui.components
 
-import androidx.compose.foundation.background
 import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.IntrinsicSize
 import androidx.compose.foundation.layout.fillMaxWidth
 import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.layout.width
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Alignment
@@ -13,7 +10,6 @@
 import androidx.compose.ui.res.stringResource
 import androidx.compose.ui.text.SpanStyle
 import androidx.compose.ui.text.buildAnnotatedString
-import androidx.compose.ui.text.font.FontWeight
 import androidx.compose.ui.text.style.TextAlign
 import androidx.compose.ui.text.withStyle
 import androidx.compose.ui.unit.dp
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui.navigation\r\n\r\nimport android.nfc.Tag\r\nimport androidx.compose.foundation.layout.PaddingValues\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport dev.borisochieng.autocaretag.nfc_reader.ui.ClientDetailsScreen\r\nimport dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel\r\nimport dev.borisochieng.autocaretag.nfc_writer.presentation.viewModel.AddInfoViewModel\r\nimport dev.borisochieng.autocaretag.ui.manage.ClientScreenViewModel\r\nimport dev.borisochieng.autocaretag.ui.manage.ClientScreen\r\nimport dev.borisochieng.autocaretag.ui.screens.AddScreen\r\nimport dev.borisochieng.autocaretag.ui.screens.HomeScreen\r\nimport dev.borisochieng.autocaretag.utils.Dummies.fakeClients\r\nimport dev.borisochieng.autocaretag.utils.animatedComposable\r\nimport org.koin.androidx.compose.koinViewModel\r\n\r\ntypealias ShouldScan = Boolean\r\n\r\n@Composable\r\nfun AppRoute(\r\n    navActions: NavActions,\r\n    navController: NavHostController,\r\n    paddingValues: PaddingValues,\r\n    scanNfc: (ShouldScan) -> Unit,\r\n    viewModel: AddInfoViewModel = koinViewModel(),\r\n    nfcReaderViewModel: NFCReaderViewModel = koinViewModel(),\r\n    clientScreenViewModel: ClientScreenViewModel = koinViewModel(),\r\n    tag: Tag? = null,\r\n    setupNfc: () -> Unit,\r\n) {\r\n    NavHost(\r\n        navController = navController,\r\n        startDestination = AppRoute.HomeScreen.route,\r\n        modifier = Modifier.padding(paddingValues)\r\n    ) {\r\n        animatedComposable(AppRoute.HomeScreen.route) {\r\n            HomeScreen(\r\n                clients = fakeClients,\r\n                viewModel = nfcReaderViewModel,\r\n                scanForNFCTag = { scanNfc(true) },\r\n                navigate = navActions::navigate\r\n            )\r\n        }\r\n        animatedComposable(AppRoute.AddScreen.route) {\r\n            AddScreen(\r\n                onNavigateUp = {\r\n                    navController.navigateUp()\r\n                },\r\n                viewModel = viewModel,\r\n                tag = tag,\r\n                setupNfc = setupNfc,\r\n                onNavigateToClientDetails = { client ->\r\n                    navActions.navigate(Screens.ClientDetailsScreen(client.clientId))\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n        animatedComposable(AppRoute.AddRepairDetailsScreen.route) { backStackEntry ->\r\n            val vehicleId = backStackEntry.arguments?.getString(\"vehicleId\") ?: \"\"\r\n        }\r\n        animatedComposable(AppRoute.ManageScreen.route) {\r\n            ClientScreen(\r\n                viewModel = clientScreenViewModel,\r\n                navigate = navActions::navigate\r\n            )\r\n        }\r\n        animatedComposable(AppRoute.ClientDetailsScreen.route) {\r\n            ClientDetailsScreen(\r\n                uiState = nfcReaderViewModel.clientUiState,\r\n                updateClientInfo = nfcReaderViewModel::updateClientDetails,\r\n                navigate = navActions::navigate\r\n            )\r\n        }\r\n        animatedComposable(AppRoute.VehicleDetailsScreen.route) { backStackEntry ->\r\n            val clientId = backStackEntry.arguments?.getString(\"clientId\") ?: \"\"\r\n        }\r\n        animatedComposable(AppRoute.RepairHistoryScreen.route) { backStackEntry ->\r\n            val vehicleId = backStackEntry.arguments?.getString(\"vehicleId\") ?: \"\"\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt	(date 1722469159914)
@@ -11,10 +11,11 @@
 import dev.borisochieng.autocaretag.nfc_reader.ui.ClientDetailsScreen
 import dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel
 import dev.borisochieng.autocaretag.nfc_writer.presentation.viewModel.AddInfoViewModel
-import dev.borisochieng.autocaretag.ui.manage.ClientScreenViewModel
 import dev.borisochieng.autocaretag.ui.manage.ClientScreen
+import dev.borisochieng.autocaretag.ui.manage.ClientScreenViewModel
 import dev.borisochieng.autocaretag.ui.screens.AddScreen
 import dev.borisochieng.autocaretag.ui.screens.HomeScreen
+import dev.borisochieng.autocaretag.ui.screens.MoreScreen
 import dev.borisochieng.autocaretag.utils.Dummies.fakeClients
 import dev.borisochieng.autocaretag.utils.animatedComposable
 import org.koin.androidx.compose.koinViewModel
@@ -38,7 +39,7 @@
         startDestination = AppRoute.HomeScreen.route,
         modifier = Modifier.padding(paddingValues)
     ) {
-        animatedComposable(AppRoute.HomeScreen.route) {
+        composable(AppRoute.HomeScreen.route) {
             HomeScreen(
                 clients = fakeClients,
                 viewModel = nfcReaderViewModel,
@@ -61,10 +62,11 @@
 
 
         }
+        composable(AppRoute.MoreScreen.route) { MoreScreen() }
         animatedComposable(AppRoute.AddRepairDetailsScreen.route) { backStackEntry ->
             val vehicleId = backStackEntry.arguments?.getString("vehicleId") ?: ""
         }
-        animatedComposable(AppRoute.ManageScreen.route) {
+        composable(AppRoute.ManageScreen.route) {
             ClientScreen(
                 viewModel = clientScreenViewModel,
                 navigate = navActions::navigate
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui.navigation\r\n\r\nimport androidx.navigation.NavHostController\r\n\r\nclass NavActions(private val navController: NavHostController) {\r\n\r\n\tfun navigate(screen: Screens) {\r\n\t\twhen (screen) {\r\n\t\t\tScreens.HomeScreen -> navigateToHomeScreen()\r\n\t\t\tScreens.AddScreen -> navigateToAddScreen()\r\n\t\t\tis Screens.AddRepairDetailsScreen -> navigateToAddRepairDetailsScreen(screen.vehicleId)\r\n\t\t\tScreens.ManageScreen -> navigateToManageScreen()\r\n\t\t\tis Screens.ClientDetailsScreen -> navigateToClientDetailsScreen(screen.clientId)\r\n\t\t\tis Screens.VehicleDetailsScreen -> navigateToVehicleDetailsScreen(screen.clientId)\r\n\t\t\tis Screens.RepairHistoryScreen -> navigateToRepairHistoryScreen(screen.vehicleId)\r\n\t\t\tScreens.Back -> navController.navigateUp()\r\n\t\t}\r\n\t}\r\n\r\n\tprivate fun navigateToHomeScreen() {\r\n\t\tnavController.navigate(AppRoute.HomeScreen.route)\r\n\t}\r\n\r\n\tprivate fun navigateToAddScreen() {\r\n\t\tnavController.navigate(AppRoute.AddScreen.route)\r\n\t}\r\n\r\n\tprivate fun navigateToAddRepairDetailsScreen(vehicleId: String) {\r\n\t\tnavController.navigate(\r\n\t\t\tAppRoute.AddRepairDetailsScreen.routeWithId(vehicleId)\r\n\t\t)\r\n\t}\r\n\r\n\tprivate fun navigateToManageScreen() {\r\n\t\tnavController.navigate(AppRoute.ManageScreen.route)\r\n\t}\r\n\r\n\tprivate fun navigateToClientDetailsScreen(clientId: Long) {\r\n\t\tnavController.navigate(\r\n\t\t\tAppRoute.ClientDetailsScreen.routeWithId(clientId)\r\n\t\t)\r\n\t}\r\n\r\n\tprivate fun navigateToVehicleDetailsScreen(clientId: String) {\r\n\t\tnavController.navigate(\r\n\t\t\tAppRoute.VehicleDetailsScreen.routeWithId(clientId)\r\n\t\t)\r\n\t}\r\n\r\n\tprivate fun navigateToRepairHistoryScreen(vehicleId: String) {\r\n\t\tnavController.navigate(\r\n\t\t\tAppRoute.RepairHistoryScreen.routeWithId(vehicleId)\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nsealed class AppRoute(val route: String) {\r\n\tdata object HomeScreen: AppRoute(\"home_screen\")\r\n\tdata object AddScreen: AppRoute(\"add_screen\")\r\n\tdata object AddRepairDetailsScreen: AppRoute(\"add_repair_details_screen/{vehicleId}\") {\r\n\t\tfun routeWithId(vehicleId: String) = String.format(\"add_repair_details_screen/%s\", vehicleId)\r\n\t}\r\n\tdata object ManageScreen: AppRoute(\"manage_screen\")\r\n\tdata object ClientDetailsScreen: AppRoute(\"client_details_screen/{clientId}\") {\r\n\t\tfun routeWithId(clientId: Long) = String.format(\"vehicle_details_screen/%s\", clientId)\r\n\t}\r\n\tdata object VehicleDetailsScreen: AppRoute(\"vehicle_details_screen/{clientId}\") {\r\n\t\tfun routeWithId(clientId: String) = String.format(\"vehicle_details_screen/%s\", clientId)\r\n\t}\r\n\tdata object RepairHistoryScreen: AppRoute(\"repair_history_screen/{vehicleId}\") {\r\n\t\tfun routeWithId(vehicleId: String) = String.format(\"repair_details_screen/%s\", vehicleId)\r\n\t}\r\n}\r\n\r\nsealed class Screens {\r\n\tdata object HomeScreen : Screens()\r\n\tdata object AddScreen : Screens() // This is the `add client` screen\r\n\tdata class AddRepairDetailsScreen(val vehicleId: String) : Screens()\r\n\tdata object ManageScreen : Screens()\r\n\tdata class ClientDetailsScreen(val clientId: Long) : Screens()\r\n\tdata class VehicleDetailsScreen(val clientId: String) : Screens()\r\n\tdata class RepairHistoryScreen(val vehicleId: String) : Screens()\r\n\tdata object Back : Screens()\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt	(date 1722463530023)
@@ -10,6 +10,7 @@
 			Screens.AddScreen -> navigateToAddScreen()
 			is Screens.AddRepairDetailsScreen -> navigateToAddRepairDetailsScreen(screen.vehicleId)
 			Screens.ManageScreen -> navigateToManageScreen()
+			Screens.MoreScreen -> navigateToMoreScreen()
 			is Screens.ClientDetailsScreen -> navigateToClientDetailsScreen(screen.clientId)
 			is Screens.VehicleDetailsScreen -> navigateToVehicleDetailsScreen(screen.clientId)
 			is Screens.RepairHistoryScreen -> navigateToRepairHistoryScreen(screen.vehicleId)
@@ -35,6 +36,10 @@
 		navController.navigate(AppRoute.ManageScreen.route)
 	}
 
+	private fun navigateToMoreScreen() {
+		navController.navigate(AppRoute.MoreScreen.route)
+	}
+
 	private fun navigateToClientDetailsScreen(clientId: Long) {
 		navController.navigate(
 			AppRoute.ClientDetailsScreen.routeWithId(clientId)
@@ -62,6 +67,7 @@
 		fun routeWithId(vehicleId: String) = String.format("add_repair_details_screen/%s", vehicleId)
 	}
 	data object ManageScreen: AppRoute("manage_screen")
+	data object MoreScreen: AppRoute("more_screen")
 	data object ClientDetailsScreen: AppRoute("client_details_screen/{clientId}") {
 		fun routeWithId(clientId: Long) = String.format("vehicle_details_screen/%s", clientId)
 	}
@@ -78,6 +84,7 @@
 	data object AddScreen : Screens() // This is the `add client` screen
 	data class AddRepairDetailsScreen(val vehicleId: String) : Screens()
 	data object ManageScreen : Screens()
+	data object MoreScreen : Screens()
 	data class ClientDetailsScreen(val clientId: Long) : Screens()
 	data class VehicleDetailsScreen(val clientId: String) : Screens()
 	data class RepairHistoryScreen(val vehicleId: String) : Screens()
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui\r\n\r\nimport android.app.PendingIntent\r\nimport android.content.Intent\r\nimport android.content.IntentFilter\r\nimport android.nfc.NfcAdapter\r\nimport android.nfc.Tag\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.WindowInsets\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.systemBars\r\nimport androidx.compose.foundation.layout.windowInsetsPadding\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Close\r\nimport androidx.compose.material.icons.rounded.Info\r\nimport androidx.compose.material.icons.rounded.Menu\r\nimport androidx.compose.material3.DrawerValue\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.ModalDrawerSheet\r\nimport androidx.compose.material3.ModalNavigationDrawer\r\nimport androidx.compose.material3.NavigationDrawerItem\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.material3.rememberDrawerState\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.rememberCoroutineScope\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.compose.rememberNavController\r\nimport dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel\r\nimport dev.borisochieng.autocaretag.ui.commons.NavBar\r\nimport dev.borisochieng.autocaretag.ui.components.ScreenTitle\r\nimport dev.borisochieng.autocaretag.ui.navigation.AppRoute\r\nimport dev.borisochieng.autocaretag.ui.navigation.NavActions\r\nimport dev.borisochieng.autocaretag.ui.navigation.Screens\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTagTheme\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.colorScheme\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.typography\r\nimport kotlinx.coroutines.launch\r\nimport org.koin.android.ext.android.inject\r\n\r\nclass MainActivity : ComponentActivity() {\r\n\r\n    private val nfcReaderViewModel: NFCReaderViewModel by inject()\r\n    private var nfcAdapter: NfcAdapter? = null\r\n\r\n    private var tag: Tag? = null\r\n    private lateinit var pendingIntent: PendingIntent\r\n    private val actions = arrayOf(\r\n        NfcAdapter.ACTION_NDEF_DISCOVERED,\r\n        NfcAdapter.ACTION_TAG_DISCOVERED,\r\n        NfcAdapter.ACTION_TECH_DISCOVERED\r\n    )\r\n    private lateinit var navActions: NavActions\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        nfcAdapter = NfcAdapter.getDefaultAdapter(this)\r\n\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            val navController = rememberNavController()\r\n            navActions = NavActions(navController)\r\n\r\n            AutoCareTagTheme {\r\n                Scaffold(\r\n                    modifier = Modifier\r\n                        .windowInsetsPadding(WindowInsets.systemBars)\r\n                        .background(colorScheme.background),\r\n                    bottomBar = { NavBar(navController) },\r\n                ) { paddingValues ->\r\n                    AppRoute(\r\n                        navActions = navActions,\r\n                        navController = navController,\r\n                        paddingValues = paddingValues,\r\n                        scanNfc = { shouldScan ->\r\n                            if (shouldScan) startNfcScanning() else stopNfcScanning()\r\n                        },\r\n                        tag = tag,\r\n                        setupNfc = ::setupNfc\r\n                    )\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onNewIntent(intent: Intent) {\r\n        super.onNewIntent(intent)\r\n        if (intent.action !in actions) return\r\n        nfcReaderViewModel.readNFCTag(intent)\r\n        Toast.makeText(this, \"Tag detected\", Toast.LENGTH_LONG).show()\r\n\r\n        val screen = if (nfcReaderViewModel.tagIsEmpty) {\r\n            Screens.AddScreen\r\n        } else Screens.ClientDetailsScreen(\r\n            nfcReaderViewModel.clientUiState.client.clientId\r\n        )\r\n        navActions.navigate(screen)\r\n        // NFC tag discovered\r\n        tag = intent.getParcelableExtra(NfcAdapter.EXTRA_TAG)\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        nfcReaderViewModel.toggleNfcEnabledStatus(\r\n            enabled = nfcAdapter != null && nfcAdapter?.isEnabled == true\r\n        )\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        nfcAdapter?.disableForegroundDispatch(this)\r\n    }\r\n\r\n    private fun startNfcScanning() {\r\n        // Enable foreground dispatch to handle NFC intents\r\n        val intent = Intent(this, javaClass)\r\n            .addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)\r\n        val pendingIntent = PendingIntent\r\n            .getActivity(this, 0, intent, PendingIntent.FLAG_MUTABLE)\r\n        val intentFilters = actions.map { IntentFilter(it) }.toTypedArray()\r\n\r\n        nfcAdapter?.enableForegroundDispatch(this, pendingIntent, intentFilters, null)\r\n        Toast.makeText(this, \"NFC scanning started\", Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n    private fun stopNfcScanning() {\r\n        // Disable foreground dispatch to stop handling NFC intents\r\n        nfcAdapter?.disableForegroundDispatch(this)\r\n        Toast.makeText(this, \"NFC scanning stopped\", Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n    private fun setupNfc() {\r\n        nfcAdapter = NfcAdapter.getDefaultAdapter(this)\r\n        val intent =\r\n            Intent(this, MainActivity::class.java).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)\r\n        pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_IMMUTABLE)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt	(date 1722471960013)
@@ -35,6 +35,7 @@
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.unit.dp
 import androidx.navigation.compose.rememberNavController
+import dev.borisochieng.autocaretag.R
 import dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel
 import dev.borisochieng.autocaretag.ui.commons.NavBar
 import dev.borisochieng.autocaretag.ui.components.ScreenTitle
@@ -62,6 +63,7 @@
     private lateinit var navActions: NavActions
 
     override fun onCreate(savedInstanceState: Bundle?) {
+        setTheme(R.style.Theme_AutoCareTag)
         super.onCreate(savedInstanceState)
         nfcAdapter = NfcAdapter.getDefaultAdapter(this)
 
Index: app/src/main/res/drawable/about_us_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/about_us_icon.xml b/app/src/main/res/drawable/about_us_icon.xml
new file mode 100644
--- /dev/null	(date 1722462381269)
+++ b/app/src/main/res/drawable/about_us_icon.xml	(date 1722462381269)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24"
+    android:viewportWidth="24">
+
+        <path android:pathData="M5.10571 18.8943C4.24283 18.0314 4.81514 16.2198 4.37595 15.1584C3.92066 14.058 2.25 13.1723 2.25 12C2.25 10.8276 3.92067 9.942 4.37595 8.84164C4.81515 7.78015 4.24283 5.96858 5.10571 5.10571C5.96858 4.24283 7.78016 4.81514 8.84165 4.37595C9.94203 3.92066 10.8277 2.25 12 2.25C13.1724 2.25 14.058 3.92067 15.1584 4.37595C16.2199 4.81515 18.0314 4.24283 18.8943 5.10571C19.7572 5.96858 19.1849 7.78016 19.6241 8.84165C20.0793 9.94203 21.75 10.8277 21.75 12C21.75 13.1724 20.0793 14.058 19.624 15.1584C19.1848 16.2199 19.7572 18.0314 18.8943 18.8943C18.0314 19.7572 16.2198 19.1849 15.1584 19.6241C14.058 20.0793 13.1723 21.75 12 21.75C10.8276 21.75 9.942 20.0793 8.84164 19.624C7.78015 19.1848 5.96858 19.7572 5.10571 18.8943Z"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M11.9999 17.8125C12.5176 17.8125 12.9374 17.3928 12.9374 16.875C12.9374 16.3572 12.5176 15.9375 11.9999 15.9375C11.4821 15.9375 11.0624 16.3572 11.0624 16.875C11.0624 17.3928 11.4821 17.8125 11.9999 17.8125Z"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.5" />
+
+        <path android:pathData="M12 13.5005V12.7505C12.5192 12.7505 13.0267 12.5965 13.4584 12.3081C13.8901 12.0197 14.2265 11.6097 14.4252 11.13C14.6239 10.6504 14.6758 10.1226 14.5746 9.61338C14.4733 9.10418 14.2233 8.63645 13.8562 8.26933C13.489 7.90222 13.0213 7.65221 12.5121 7.55093C12.0029 7.44964 11.4751 7.50163 10.9955 7.70031C10.5158 7.89899 10.1058 8.23544 9.81739 8.66712C9.52895 9.0988 9.375 9.60631 9.375 10.1255"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+</vector>
Index: app/src/main/res/drawable/rate_logo.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rate_logo.xml b/app/src/main/res/drawable/rate_logo.xml
new file mode 100644
--- /dev/null	(date 1722462118851)
+++ b/app/src/main/res/drawable/rate_logo.xml	(date 1722462118851)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24"
+    android:viewportWidth="24">
+
+        <path android:pathData="M5.10571 18.8943C4.24283 18.0314 4.81514 16.2198 4.37595 15.1584C3.92066 14.058 2.25 13.1723 2.25 12C2.25 10.8276 3.92067 9.942 4.37595 8.84164C4.81515 7.78015 4.24283 5.96858 5.10571 5.10571C5.96858 4.24283 7.78016 4.81514 8.84165 4.37595C9.94203 3.92066 10.8277 2.25 12 2.25C13.1724 2.25 14.058 3.92067 15.1584 4.37595C16.2199 4.81515 18.0314 4.24283 18.8943 5.10571C19.7572 5.96858 19.1849 7.78016 19.6241 8.84165C20.0793 9.94203 21.75 10.8277 21.75 12C21.75 13.1724 20.0793 14.058 19.624 15.1584C19.1848 16.2199 19.7572 18.0314 18.8943 18.8943C18.0314 19.7572 16.2198 19.1849 15.1584 19.6241C14.058 20.0793 13.1723 21.75 12 21.75C10.8276 21.75 9.942 20.0793 8.84164 19.624C7.78015 19.1848 5.96858 19.7572 5.10571 18.8943Z" stroke="#0F172A"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M16.125 9.75L10.625 15L7.875 12.375"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+</vector>
+
Index: app/src/main/res/drawable/app_logo.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/app_logo.xml b/app/src/main/res/drawable/app_logo.xml
new file mode 100644
--- /dev/null	(date 1722468176623)
+++ b/app/src/main/res/drawable/app_logo.xml	(date 1722468176623)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="122dp"
+    android:height="24dp"
+    android:viewportHeight="24"
+    android:viewportWidth="122">
+
+        <path android:pathData="M17.9744 19H14.679L19.7003 4.45455H23.6634L28.6776 19H25.3821L21.7386 7.77841H21.625L17.9744 19ZM17.7685 13.2827H25.5526V15.6832H17.7685V13.2827ZM37.3672 14.3551V8.09091H40.3928V19H37.4879V17.0185H37.3743C37.1281 17.6577 36.7185 18.1714 36.1456 18.5597C35.5774 18.9479 34.8838 19.142 34.0646 19.142C33.3355 19.142 32.6939 18.9763 32.1399 18.6449C31.5859 18.3134 31.1527 17.8423 30.8402 17.2315C30.5324 16.6207 30.3762 15.8892 30.3714 15.0369V8.09091H33.397V14.4972C33.4018 15.1411 33.5746 15.6501 33.9155 16.0241C34.2564 16.3982 34.7133 16.5852 35.2862 16.5852C35.6508 16.5852 35.9917 16.5024 36.3089 16.3366C36.6262 16.1662 36.8819 15.9152 37.076 15.5838C37.2749 15.2524 37.3719 14.8428 37.3672 14.3551ZM48.6154 8.09091V10.3636H42.0458V8.09091H48.6154ZM43.5373 5.47727H46.5629V15.6477C46.5629 15.9271 46.6055 16.1449 46.6907 16.3011C46.7759 16.4527 46.8943 16.5592 47.0458 16.6207C47.2021 16.6823 47.382 16.7131 47.5856 16.7131C47.7276 16.7131 47.8697 16.7012 48.0117 16.6776C48.1538 16.6491 48.2627 16.6278 48.3384 16.6136L48.8143 18.8651C48.6628 18.9124 48.4497 18.9669 48.1751 19.0284C47.9004 19.0947 47.5666 19.1349 47.1737 19.1491C46.4445 19.1776 45.8053 19.0805 45.256 18.858C44.7115 18.6354 44.2878 18.2898 43.9847 17.821C43.6817 17.3523 43.5326 16.7604 43.5373 16.0455V5.47727ZM55.3981 19.2131C54.2949 19.2131 53.3408 18.9787 52.5359 18.5099C51.7357 18.0365 51.1178 17.3783 50.6822 16.5355C50.2466 15.688 50.0288 14.7055 50.0288 13.5881C50.0288 12.4612 50.2466 11.4763 50.6822 10.6335C51.1178 9.78598 51.7357 9.12784 52.5359 8.65909C53.3408 8.18561 54.2949 7.94886 55.3981 7.94886C56.5013 7.94886 57.453 8.18561 58.2532 8.65909C59.0581 9.12784 59.6784 9.78598 60.114 10.6335C60.5496 11.4763 60.7674 12.4612 60.7674 13.5881C60.7674 14.7055 60.5496 15.688 60.114 16.5355C59.6784 17.3783 59.0581 18.0365 58.2532 18.5099C57.453 18.9787 56.5013 19.2131 55.3981 19.2131ZM55.4123 16.8693C55.9142 16.8693 56.3332 16.7273 56.6694 16.4432C57.0056 16.1544 57.2589 15.7614 57.4293 15.2642C57.6045 14.767 57.6921 14.2012 57.6921 13.5668C57.6921 12.9323 57.6045 12.3665 57.4293 11.8693C57.2589 11.3722 57.0056 10.9792 56.6694 10.6903C56.3332 10.4015 55.9142 10.2571 55.4123 10.2571C54.9057 10.2571 54.4795 10.4015 54.1339 10.6903C53.793 10.9792 53.5349 11.3722 53.3597 11.8693C53.1893 12.3665 53.104 12.9323 53.104 13.5668C53.104 14.2012 53.1893 14.767 53.3597 15.2642C53.5349 15.7614 53.793 16.1544 54.1339 16.4432C54.4795 16.7273 54.9057 16.8693 55.4123 16.8693Z"
+            android:fillColor="#0F172A"
+            android:strokeWidth="1.2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M75.6254 9.54688H72.5146C72.4577 9.14441 72.3417 8.78693 72.1665 8.47443C71.9914 8.1572 71.7665 7.88731 71.4918 7.66477C71.2172 7.44223 70.9 7.27178 70.5401 7.15341C70.185 7.03504 69.7991 6.97585 69.3825 6.97585C68.6296 6.97585 67.9738 7.16288 67.4151 7.53693C66.8564 7.90625 66.4232 8.44602 66.1154 9.15625C65.8076 9.86174 65.6538 10.7187 65.6538 11.7273C65.6538 12.7642 65.8076 13.6354 66.1154 14.3409C66.4279 15.0464 66.8635 15.5791 67.4222 15.9389C67.9809 16.2988 68.6272 16.4787 69.3612 16.4787C69.7731 16.4787 70.1542 16.4242 70.5046 16.3153C70.8597 16.2064 71.1746 16.0478 71.4492 15.8395C71.7238 15.6264 71.9511 15.3684 72.131 15.0653C72.3157 14.7623 72.4435 14.4167 72.5146 14.0284L75.6254 14.0426C75.5449 14.7102 75.3436 15.3542 75.0217 15.9744C74.7044 16.59 74.2759 17.1416 73.7362 17.6293C73.2011 18.1122 72.5619 18.4957 71.8185 18.7798C71.0799 19.0592 70.2442 19.1989 69.3114 19.1989C68.0141 19.1989 66.854 18.9053 65.8313 18.3182C64.8133 17.7311 64.0084 16.8812 63.4165 15.7685C62.8294 14.6558 62.5359 13.3087 62.5359 11.7273C62.5359 10.1411 62.8342 8.79167 63.4308 7.67898C64.0273 6.56629 64.837 5.71875 65.8597 5.13636C66.8825 4.54924 68.033 4.25568 69.3114 4.25568C70.1542 4.25568 70.9355 4.37405 71.6552 4.6108C72.3796 4.84754 73.0212 5.19318 73.5799 5.64773C74.1386 6.09754 74.5932 6.64915 74.9435 7.30256C75.2987 7.95597 75.5259 8.70407 75.6254 9.54688ZM80.8846 19.206C80.1886 19.206 79.5683 19.0852 79.0238 18.8438C78.4793 18.5975 78.0484 18.2353 77.7312 17.7571C77.4187 17.2741 77.2624 16.6728 77.2624 15.9531C77.2624 15.3471 77.3737 14.8381 77.5962 14.4261C77.8188 14.0142 78.1218 13.6828 78.5053 13.4318C78.8888 13.1809 79.3245 12.9915 79.8121 12.8636C80.3046 12.7358 80.8207 12.6458 81.3604 12.5938C81.9949 12.5275 82.5063 12.4659 82.8945 12.4091C83.2828 12.3475 83.5645 12.2576 83.7397 12.1392C83.9149 12.0208 84.0025 11.8456 84.0025 11.6136V11.571C84.0025 11.1212 83.8604 10.7732 83.5763 10.527C83.297 10.2808 82.8993 10.1577 82.3832 10.1577C81.8387 10.1577 81.4054 10.2784 81.0835 10.5199C80.7615 10.7566 80.5484 11.0549 80.4442 11.4148L77.646 11.1875C77.788 10.5246 78.0674 9.9517 78.484 9.46875C78.9007 8.98106 79.4381 8.60701 80.0962 8.34659C80.7591 8.08144 81.5262 7.94886 82.3974 7.94886C83.0034 7.94886 83.5835 8.01989 84.1374 8.16193C84.6961 8.30398 85.1909 8.52415 85.6218 8.82244C86.0574 9.12074 86.4007 9.50426 86.6516 9.97301C86.9026 10.437 87.0281 10.9934 87.0281 11.642V19H84.1587V17.4872H84.0735C83.8983 17.8281 83.6639 18.1288 83.3704 18.3892C83.0768 18.6449 82.7241 18.8461 82.3121 18.9929C81.9002 19.1349 81.4244 19.206 80.8846 19.206ZM81.7511 17.1179C82.1961 17.1179 82.5891 17.0303 82.93 16.8551C83.271 16.6752 83.5385 16.4337 83.7326 16.1307C83.9267 15.8277 84.0238 15.4844 84.0238 15.1009V13.9432C83.9291 14.0047 83.7989 14.0616 83.6332 14.1136C83.4722 14.161 83.2899 14.206 83.0863 14.2486C82.8827 14.2865 82.6791 14.322 82.4755 14.3551C82.2719 14.3835 82.0872 14.4096 81.9215 14.4332C81.5664 14.4853 81.2563 14.5682 80.9911 14.6818C80.726 14.7955 80.52 14.9493 80.3732 15.1435C80.2264 15.3329 80.1531 15.5696 80.1531 15.8537C80.1531 16.2656 80.3022 16.5805 80.6005 16.7983C80.9035 17.0114 81.2871 17.1179 81.7511 17.1179ZM89.3754 19V8.09091H92.3086V9.99432H92.4222C92.6211 9.31723 92.9549 8.80587 93.4237 8.46023C93.8924 8.10985 94.4322 7.93466 95.043 7.93466C95.1945 7.93466 95.3578 7.94413 95.533 7.96307C95.7082 7.98201 95.8621 8.00805 95.9947 8.04119V10.7259C95.8526 10.6832 95.6561 10.6454 95.4052 10.6122C95.1542 10.5791 94.9246 10.5625 94.7163 10.5625C94.2712 10.5625 93.8735 10.6596 93.5231 10.8537C93.1774 11.0431 92.9028 11.3082 92.6992 11.6491C92.5004 11.9901 92.4009 12.383 92.4009 12.8281V19H89.3754ZM102.023 19.2131C100.901 19.2131 99.9347 18.9858 99.125 18.5312C98.3201 18.072 97.6998 17.4233 97.2642 16.5852C96.8286 15.7424 96.6108 14.7457 96.6108 13.5952C96.6108 12.473 96.8286 11.4882 97.2642 10.6406C97.6998 9.79309 98.313 9.13258 99.1037 8.65909C99.8991 8.18561 100.832 7.94886 101.902 7.94886C102.622 7.94886 103.292 8.06487 103.912 8.29688C104.537 8.52415 105.081 8.86742 105.545 9.3267C106.014 9.78598 106.379 10.3636 106.639 11.0597C106.9 11.7509 107.03 12.5606 107.03 13.4886V14.3196H97.8182V12.4446H104.182C104.182 12.009 104.087 11.6231 103.898 11.2869C103.708 10.9508 103.446 10.688 103.109 10.4986C102.778 10.3045 102.392 10.2074 101.952 10.2074C101.492 10.2074 101.085 10.3139 100.73 10.527C100.38 10.7353 100.105 11.017 99.9062 11.3722C99.7074 11.7225 99.6056 12.1132 99.6009 12.544V14.3267C99.6009 14.8665 99.7003 15.3329 99.8991 15.7259C100.103 16.1188 100.389 16.4219 100.759 16.6349C101.128 16.848 101.566 16.9545 102.072 16.9545C102.409 16.9545 102.716 16.9072 102.996 16.8125C103.275 16.7178 103.514 16.5758 103.713 16.3864C103.912 16.197 104.063 15.965 104.168 15.6903L106.966 15.875C106.824 16.5473 106.533 17.1345 106.092 17.6364C105.657 18.1335 105.093 18.5218 104.402 18.8011C103.715 19.0758 102.922 19.2131 102.023 19.2131Z"
+            android:fillColor="#0983FF"
+            android:strokeWidth="1.2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+</vector>
Index: app/src/main/res/drawable/help_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/help_icon.xml b/app/src/main/res/drawable/help_icon.xml
new file mode 100644
--- /dev/null	(date 1722461842522)
+++ b/app/src/main/res/drawable/help_icon.xml	(date 1722461842522)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24"
+    android:viewportWidth="24">
+
+        <path android:pathData="M5.10571 18.8943C4.24283 18.0314 4.81514 16.2198 4.37595 15.1584C3.92066 14.058 2.25 13.1723 2.25 12C2.25 10.8276 3.92067 9.942 4.37595 8.84164C4.81515 7.78015 4.24283 5.96858 5.10571 5.10571C5.96858 4.24283 7.78016 4.81514 8.84165 4.37595C9.94203 3.92066 10.8277 2.25 12 2.25C13.1724 2.25 14.058 3.92067 15.1584 4.37595C16.2199 4.81515 18.0314 4.24283 18.8943 5.10571C19.7572 5.96858 19.1849 7.78016 19.6241 8.84165C20.0793 9.94203 21.75 10.8277 21.75 12C21.75 13.1724 20.0793 14.058 19.624 15.1584C19.1848 16.2199 19.7572 18.0314 18.8943 18.8943C18.0314 19.7572 16.2198 19.1849 15.1584 19.6241C14.058 20.0793 13.1723 21.75 12 21.75C10.8276 21.75 9.942 20.0793 8.84164 19.624C7.78015 19.1848 5.96858 19.7572 5.10571 18.8943Z"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M12 7.5V12.75"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M12 17.0625C12.5178 17.0625 12.9375 16.6428 12.9375 16.125C12.9375 15.6072 12.5178 15.1875 12 15.1875C11.4822 15.1875 11.0625 15.6072 11.0625 16.125C11.0625 16.6428 11.4822 17.0625 12 17.0625Z"
+            android:strokeColor="#0F172A"
+            android:strokeWidth="1.5" />
+
+</vector>
Index: app/src/main/res/drawable/more_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/more_icon.xml b/app/src/main/res/drawable/more_icon.xml
new file mode 100644
--- /dev/null	(date 1722461669975)
+++ b/app/src/main/res/drawable/more_icon.xml	(date 1722461669975)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24"
+    android:viewportWidth="24">
+
+        <path android:pathData="M7.125 10.5C8.98896 10.5 10.5 8.98896 10.5 7.125C10.5 5.26104 8.98896 3.75 7.125 3.75C5.26104 3.75 3.75 5.26104 3.75 7.125C3.75 8.98896 5.26104 10.5 7.125 10.5Z"
+            android:strokeColor="#606060"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M16.875 10.5C18.739 10.5 20.25 8.98896 20.25 7.125C20.25 5.26104 18.739 3.75 16.875 3.75C15.011 3.75 13.5 5.26104 13.5 7.125C13.5 8.98896 15.011 10.5 16.875 10.5Z"
+            android:strokeColor="#606060"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M7.125 20.25C8.98896 20.25 10.5 18.739 10.5 16.875C10.5 15.011 8.98896 13.5 7.125 13.5C5.26104 13.5 3.75 15.011 3.75 16.875C3.75 18.739 5.26104 20.25 7.125 20.25Z"
+            android:strokeColor="#606060"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M16.875 20.25C18.739 20.25 20.25 18.739 20.25 16.875C20.25 15.011 18.739 13.5 16.875 13.5C15.011 13.5 13.5 15.011 13.5 16.875C13.5 18.739 15.011 20.25 16.875 20.25Z"
+            android:strokeColor="#606060"
+            android:strokeWidth="1.5"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+</vector>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-feature\r\n        android:name=\"android.hardware.nfc\"\r\n        android:required=\"true\" />\r\n    <uses-permission android:name=\"android.permission.NFC\" />\r\n\r\n    <application\r\n        android:name=\".AutoCareTagApp\"\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AutoCareTag\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ui.MainActivity\"\r\n            android:exported=\"true\"\r\n            android:windowSoftInputMode=\"adjustResize\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n            <intent-filter>\r\n                <action android:name=\"android.nfc.action.NDEF_DISCOVERED\" />\r\n                <action android:name=\"android.nfc.action.TECH_DISCOVERED\"/>\r\n                <action android:name=\"android.nfc.action.TAG_DISCOVERED\"/>\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <data android:mimeType=\"application/json\"/>\r\n            </intent-filter>\r\n            <meta-data\r\n                android:name=\"android.nfc.action.TECH_DISCOVERED\"\r\n                android:resource=\"@xml/nfc_tech_filter\" />\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision a4f2b879d4872b8a1ca360d3c65c4ffea5b6f454)
+++ b/app/src/main/AndroidManifest.xml	(date 1722471958444)
@@ -16,7 +16,7 @@
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
-        android:theme="@style/Theme.AutoCareTag"
+        android:theme="@style/Theme.Splash"
         tools:targetApi="31">
         <activity
             android:name=".ui.MainActivity"
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/screens/More.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/More.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/More.kt
new file mode 100644
--- /dev/null	(date 1722467910350)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/screens/More.kt	(date 1722467910350)
@@ -0,0 +1,102 @@
+package dev.borisochieng.autocaretag.ui.screens
+
+import android.content.Context
+import android.widget.Toast
+import androidx.annotation.DrawableRes
+import androidx.annotation.StringRes
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.padding
+import androidx.compose.material3.ExperimentalMaterial3Api
+import androidx.compose.material3.Icon
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.Text
+import androidx.compose.material3.TopAppBar
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.painter.Painter
+import androidx.compose.ui.platform.LocalContext
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.res.stringResource
+import androidx.compose.ui.unit.dp
+import dev.borisochieng.autocaretag.R
+import dev.borisochieng.autocaretag.ui.components.ScreenTitle
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun MoreScreen() {
+	Scaffold(
+		topBar = { TopAppBar(title = { ScreenTitle() }) }
+	) { paddingValues ->
+		Column(
+			Modifier
+				.fillMaxSize()
+				.padding(paddingValues)
+		) {
+			MenuOptions.entries.forEach { menu ->
+				MenuItem(
+					painter = painterResource(menu.iconRes),
+					label = stringResource(menu.labelRes)
+				)
+			}
+		}
+	}
+}
+
+@Composable
+private fun MenuItem(
+	painter: Painter,
+	label: String,
+	modifier: Modifier = Modifier
+) {
+	val context = LocalContext.current
+
+	Row(
+		modifier = modifier
+			.fillMaxWidth()
+			.clickable { showToast(R.string.coming_soon, context) }
+			.padding(20.dp, 24.dp),
+		verticalAlignment = Alignment.CenterVertically
+	) {
+		Icon(
+			painter = painter,
+			contentDescription = label,
+			modifier = Modifier.padding(end = 10.dp)
+		)
+		Text(text = label)
+	}
+}
+
+private fun showToast(
+	@StringRes stringRes: Int,
+	context: Context,
+	text: String? = null
+) {
+	Toast.makeText(
+		context,
+		text ?: context.getString(stringRes),
+		Toast.LENGTH_SHORT
+	).show()
+}
+
+private enum class MenuOptions(
+	@StringRes val labelRes: Int,
+	@DrawableRes val iconRes: Int
+) {
+	Help(
+		R.string.help,
+		R.drawable.help_icon
+	),
+	AboutUs(
+		R.string.about,
+		R.drawable.about_us_icon
+	),
+	Rate(
+		R.string.rate_app,
+		R.drawable.rate_logo
+	)
+}
