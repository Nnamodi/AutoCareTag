Index: app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui\r\n\r\nimport android.app.PendingIntent\r\nimport android.content.Intent\r\nimport android.content.IntentFilter\r\nimport android.nfc.NfcAdapter\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.WindowInsets\r\nimport androidx.compose.foundation.layout.systemBars\r\nimport androidx.compose.foundation.layout.windowInsetsPadding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.navigation.compose.rememberNavController\r\nimport dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel\r\nimport dev.borisochieng.autocaretag.ui.commons.NavBar\r\nimport dev.borisochieng.autocaretag.ui.navigation.AppRoute\r\nimport dev.borisochieng.autocaretag.ui.navigation.NavActions\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTagTheme\r\nimport org.koin.android.ext.android.inject\r\n\r\nclass MainActivity : ComponentActivity() {\r\n\r\n    private val nfcReaderViewModel: NFCReaderViewModel by inject()\r\n    private var nfcAdapter: NfcAdapter? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        nfcAdapter = NfcAdapter.getDefaultAdapter(this)\r\n\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            val navController = rememberNavController()\r\n\r\n            AutoCareTagTheme {\r\n                Scaffold(\r\n                    modifier = Modifier.windowInsetsPadding(WindowInsets.systemBars),\r\n                    bottomBar = { NavBar(navController) }) { paddingValues ->\r\n                    AppRoute(\r\n                        navActions = NavActions(navController),\r\n                        navController = navController,\r\n                        paddingValues = paddingValues,\r\n                        scanNfc = { shouldScan ->\r\n                            if (shouldScan) startNfcScanning() else stopNfcScanning()\r\n                        }\r\n                    )\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun startNfcScanning() {\r\n        // Enable foreground dispatch to handle NFC intents\r\n        nfcAdapter?.enableForegroundDispatch(this, pendingIntent, intentFilters, null)\r\n        Toast.makeText(this, \"NFC scanning started\", Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n    override fun onNewIntent(intent: Intent) {\r\n        super.onNewIntent(intent)\r\n        if (intent.action != NfcAdapter.ACTION_NDEF_DISCOVERED) return\r\n        nfcReaderViewModel.readNFCTag(intent)\r\n        Toast.makeText(this, \"Tag detected\", Toast.LENGTH_LONG).show()\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        startNfcScanning(alertUser = false)\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        nfcAdapter?.disableForegroundDispatch(this)\r\n    }\r\n\r\n    private fun startNfcScanning(alertUser: Boolean = true) {\r\n        // Enable foreground dispatch to handle NFC intents\r\n        val intent = Intent(this, javaClass)\r\n            .addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)\r\n        val pendingIntent = PendingIntent\r\n            .getActivity(this, 0, intent, PendingIntent.FLAG_MUTABLE)\r\n        val intentFilters = arrayOf(\r\n            IntentFilter(NfcAdapter.ACTION_NDEF_DISCOVERED)\r\n        )\r\n        nfcAdapter?.enableForegroundDispatch(this, pendingIntent, intentFilters, null)\r\n        if (!alertUser) return\r\n        Toast.makeText(this, \"NFC scanning started\", Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n    private fun stopNfcScanning() {\r\n        // Disable foreground dispatch to stop handling NFC intents\r\n        nfcAdapter?.disableForegroundDispatch(this)\r\n        Toast.makeText(this, \"NFC scanning stopped\", Toast.LENGTH_SHORT).show()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt	(revision 1bd46175952827e00d7f7e92862b2207a0e286cc)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt	(date 1722333211653)
@@ -53,13 +53,6 @@
         }
     }
 
-
-    private fun startNfcScanning() {
-        // Enable foreground dispatch to handle NFC intents
-        nfcAdapter?.enableForegroundDispatch(this, pendingIntent, intentFilters, null)
-        Toast.makeText(this, "NFC scanning started", Toast.LENGTH_SHORT).show()
-    }
-
     override fun onNewIntent(intent: Intent) {
         super.onNewIntent(intent)
         if (intent.action != NfcAdapter.ACTION_NDEF_DISCOVERED) return
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.5.1\"\r\nkotlin = \"2.0.0\"\r\nktlint = \"12.1.1\"\r\nroom =  \"2.6.1\"\r\nksp = \"2.0.0-1.0.23\"\r\n\r\nactivityCompose = \"1.9.1\"\r\ncomposeBom = \"2024.06.00\"\r\ncoreKtx = \"1.13.1\"\r\ngson = \"2.11.0\"\r\nkoinBom = \"3.6.0-wasm-alpha2\"\r\nlifecycleRuntimeKtx = \"2.8.4\"\r\nmaterial3 = \"1.2.1\"\r\nnavigationCompose = \"2.7.7\"\r\nespressoCore = \"3.6.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nroomKtx = \"2.6.1\"\r\nroomPaging = \"2.6.1\"\r\nroomRuntime = \"2.6.1\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-room-ktx = { module = \"androidx.room:room-ktx\", version.ref = \"roomKtx\" }\r\nandroidx-room-paging = { module = \"androidx.room:room-paging\", version.ref = \"roomPaging\" }\r\nandroidx-room-runtime = { module = \"androidx.room:room-runtime\", version.ref = \"roomRuntime\" }\r\nroom-annotation-processor = { group = \"androidx.room\", name = \"room-compiler\", version.ref = \"room\"}\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\", version.ref = \"material3\" }\r\ngson = { module = \"com.google.code.gson:gson\", version.ref = \"gson\" }\r\nkoin-android = { module = \"io.insert-koin:koin-android\" }\r\nkoin-bom = { module = \"io.insert-koin:koin-bom\", version.ref = \"koinBom\" }\r\nkoin-core = { module = \"io.insert-koin:koin-core\" }\r\nandroidx-compose-navigation = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref = \"navigationCompose\"}\r\n\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\ncompose-compiler = { id = \"org.jetbrains.kotlin.plugin.compose\", version.ref = \"kotlin\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\nktlint-gradle = { id = \"org.jlleitschuh.gradle.ktlint\", version.ref = \"ktlint\" }\r\nandroidx-room = { id = \"androidx.room\", version.ref = \"room\"}\r\nksp-kotlin = { id =\"com.google.devtools.ksp\", version.ref = \"ksp\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 1bd46175952827e00d7f7e92862b2207a0e286cc)
+++ b/gradle/libs.versions.toml	(date 1722333776093)
@@ -37,6 +37,7 @@
 gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
 koin-android = { module = "io.insert-koin:koin-android" }
 koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
+koin-compose = { module = "io.insert-koin:koin-androidx-compose" }
 koin-core = { module = "io.insert-koin:koin-core" }
 androidx-compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose"}
 
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.jlleitschuh.gradle.ktlint.reporter.ReporterType\r\n\r\nplugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.compose.compiler)\r\n    alias(libs.plugins.ktlint.gradle)\r\n    alias(libs.plugins.ksp.kotlin)\r\n    alias(libs.plugins.androidx.room)\r\n}\r\n\r\nandroid {\r\n    namespace = \"dev.borisochieng.autocaretag\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"dev.borisochieng.autocaretag\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n\r\n        room {\r\n            schemaDirectory(path = \"$projectDir/schemas\")\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\",\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\nktlint {\r\n    android = true\r\n    ignoreFailures = false\r\n    reporters {\r\n        reporter(ReporterType.JSON)\r\n        reporter(ReporterType.HTML)\r\n    }\r\n}\r\n\r\ndependencies {\r\n    // android\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n\r\n    // compose\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.androidx.compose.navigation)\r\n\r\n    // di\r\n    implementation(libs.koin.android)\r\n    implementation(platform(libs.koin.bom))\r\n    implementation(libs.koin.core)\r\n\r\n    // gson\r\n    implementation(libs.gson)\r\n\r\n    // test\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n\r\n    //room\r\n    implementation(libs.androidx.room.runtime)\r\n    implementation(libs.androidx.room.paging)\r\n    implementation(libs.androidx.room.ktx)\r\n    annotationProcessor(libs.room.annotation.processor)\r\n    ksp(libs.room.annotation.processor)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 1bd46175952827e00d7f7e92862b2207a0e286cc)
+++ b/app/build.gradle.kts	(date 1722333776052)
@@ -85,6 +85,7 @@
     // di
     implementation(libs.koin.android)
     implementation(platform(libs.koin.bom))
+    implementation(libs.koin.compose)
     implementation(libs.koin.core)
 
     // gson
