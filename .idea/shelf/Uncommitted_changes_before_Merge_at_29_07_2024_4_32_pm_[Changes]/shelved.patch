Index: .idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1722102452374)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm_[Changes]/shelved.patch	(date 1722102452374)
@@ -0,0 +1,29 @@
+Index: .idea/.name
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/.name b/.idea/.name
+new file mode 100644
+--- /dev/null	(date 1722102279515)
++++ b/.idea/.name	(date 1722102279515)
+@@ -0,0 +1,1 @@
++TagTidy
+\ No newline at end of file
+Index: .idea/vcs.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/vcs.xml b/.idea/vcs.xml
+new file mode 100644
+--- /dev/null	(date 1722101648453)
++++ b/.idea/vcs.xml	(date 1722101648453)
+@@ -0,0 +1,6 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="VcsDirectoryMappings">
++    <mapping directory="" vcs="Git" />
++  </component>
++</project>
+\ No newline at end of file
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt
new file mode 100644
--- /dev/null	(date 1722266873337)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/AppRoute.kt	(date 1722266873337)
@@ -0,0 +1,47 @@
+package dev.borisochieng.autocaretag.ui.navigation
+
+import androidx.compose.foundation.layout.PaddingValues
+import androidx.compose.foundation.layout.calculateEndPadding
+import androidx.compose.foundation.layout.calculateStartPadding
+import androidx.compose.foundation.layout.padding
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.platform.LocalLayoutDirection
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import dev.borisochieng.autocaretag.utils.animatedComposable
+
+@androidx.compose.runtime.Composable
+fun AppRoute(
+	navActions: NavActions,
+	navController: NavHostController,
+	paddingValues: PaddingValues
+) {
+	val layoutDirection = LocalLayoutDirection.current
+
+	NavHost(
+		navController = navController,
+		startDestination = AppRoute.HomeScreen.route,
+		modifier = Modifier.padding(
+			PaddingValues(
+				start = paddingValues.calculateStartPadding(layoutDirection),
+				end = paddingValues.calculateEndPadding(layoutDirection),
+				bottom = paddingValues.calculateBottomPadding()
+			)
+		)
+	) {
+		composable(AppRoute.HomeScreen.route) {}
+		composable(AppRoute.AddScreen.route) {}
+		animatedComposable(AppRoute.AddRepairDetailsScreen.route) { backStackEntry ->
+			val vehicleId = backStackEntry.arguments?.getString("vehicleId") ?: ""
+		}
+		composable(AppRoute.ManageScreen.route) {}
+		animatedComposable(AppRoute.ClientDetailsScreen.route) {}
+		animatedComposable(AppRoute.VehicleDetailsScreen.route) { backStackEntry ->
+			val clientId = backStackEntry.arguments?.getString("clientId") ?: ""
+		}
+		animatedComposable(AppRoute.RepairHistoryScreen.route) { backStackEntry ->
+			val vehicleId = backStackEntry.arguments?.getString("vehicleId") ?: ""
+		}
+	}
+}
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>AutoCareTag
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.name b/.idea/.name
--- a/.idea/.name	(revision beb0145f611c242b4e07bc3d0aa71145621e13f0)
+++ b/.idea/.name	(date 1722251407132)
@@ -1,1 +1,1 @@
-AutoCareTag
\ No newline at end of file
+TagTidy
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">AutoCareTag</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision beb0145f611c242b4e07bc3d0aa71145621e13f0)
+++ b/app/src/main/res/values/strings.xml	(date 1722253420407)
@@ -1,3 +1,6 @@
 <resources>
     <string name="app_name">AutoCareTag</string>
+    <string name="home">Home</string>
+    <string name="add">Add</string>
+    <string name="manage">Manage</string>
 </resources>
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.jlleitschuh.gradle.ktlint.reporter.ReporterType\r\n\r\nplugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.compose.compiler)\r\n    alias(libs.plugins.ktlint.gradle)\r\n}\r\n\r\nandroid {\r\n    namespace = \"dev.borisochieng.autocaretag\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"dev.borisochieng.autocaretag\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\",\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\nktlint {\r\n    android = true\r\n    ignoreFailures = false\r\n    reporters {\r\n        reporter(ReporterType.JSON)\r\n        reporter(ReporterType.HTML)\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    // android\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n\r\n    // compose\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n\r\n    // gson\r\n    implementation(libs.gson)\r\n\r\n    // di\r\n    implementation(libs.koin.android)\r\n    implementation(platform(libs.koin.bom))\r\n    implementation(libs.koin.core)\r\n\r\n    // test\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n\r\n    //Gson\r\n    implementation (libs.gson)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision beb0145f611c242b4e07bc3d0aa71145621e13f0)
+++ b/app/build.gradle.kts	(date 1722251406467)
@@ -75,15 +75,16 @@
     implementation(libs.androidx.ui.graphics)
     implementation(libs.androidx.ui.tooling.preview)
     implementation(libs.androidx.material3)
-
-    // gson
-    implementation(libs.gson)
+    implementation(libs.compose.navigation)
 
     // di
     implementation(libs.koin.android)
     implementation(platform(libs.koin.bom))
     implementation(libs.koin.core)
 
+    // gson
+    implementation(libs.gson)
+
     // test
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
@@ -92,7 +93,4 @@
     androidTestImplementation(libs.androidx.ui.test.junit4)
     debugImplementation(libs.androidx.ui.tooling)
     debugImplementation(libs.androidx.ui.test.manifest)
-
-    //Gson
-    implementation (libs.gson)
 }
\ No newline at end of file
Index: app/src/main/res/drawable/home_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/home_icon.xml b/app/src/main/res/drawable/home_icon.xml
new file mode 100644
--- /dev/null	(date 1722252569947)
+++ b/app/src/main/res/drawable/home_icon.xml	(date 1722252569947)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="25dp"
+    android:height="25dp"
+    android:viewportHeight="25"
+    android:viewportWidth="24">
+
+        <path android:pathData="M3.5 9L12.5 2L21.5 9V20C21.5 20.5304 21.2893 21.0391 20.9142 21.4142C20.5391 21.7893 20.0304 22 19.5 22H5.5C4.96957 22 4.46086 21.7893 4.08579 21.4142C3.71071 21.0391 3.5 20.5304 3.5 20V9Z"
+            android:strokeColor="#A3A3A3"
+            android:strokeWidth="2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M9.5 22V12H15.5V22"
+            android:strokeColor="#A3A3A3"
+            android:strokeWidth="2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+</vector>
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.borisochieng.autocaretag.ui\r\n\r\nimport android.app.PendingIntent\r\nimport android.content.Intent\r\nimport android.content.IntentFilter\r\nimport android.nfc.NfcAdapter\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel\r\nimport dev.borisochieng.autocaretag.ui.theme.AutoCareTagTheme\r\nimport org.koin.android.ext.android.inject\r\n\r\nclass MainActivity : ComponentActivity() {\r\n\r\n    private val nfcReaderViewModel: NFCReaderViewModel by inject()\r\n    private var nfcAdapter: NfcAdapter? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        nfcAdapter = NfcAdapter.getDefaultAdapter(this)\r\n\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            AutoCareTagTheme {}\r\n        }\r\n    }\r\n\r\n    override fun onNewIntent(intent: Intent) {\r\n        super.onNewIntent(intent)\r\n        if (intent.action != NfcAdapter.ACTION_NDEF_DISCOVERED) return\r\n        nfcReaderViewModel.readNFCTag(intent)\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        val intent = Intent(this, javaClass)\r\n            .addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)\r\n        val pendingIntent = PendingIntent\r\n            .getActivity(this, 0, intent, PendingIntent.FLAG_MUTABLE)\r\n        val intentFilters = arrayOf(\r\n            IntentFilter(NfcAdapter.ACTION_NDEF_DISCOVERED)\r\n        )\r\n        nfcAdapter?.enableForegroundDispatch(this, pendingIntent, intentFilters, null)\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        nfcAdapter?.disableForegroundDispatch(this)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt
--- a/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt	(revision beb0145f611c242b4e07bc3d0aa71145621e13f0)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/MainActivity.kt	(date 1722266874158)
@@ -8,7 +8,12 @@
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
 import androidx.activity.enableEdgeToEdge
+import androidx.compose.material3.Scaffold
+import androidx.navigation.compose.rememberNavController
 import dev.borisochieng.autocaretag.nfc_reader.ui.NFCReaderViewModel
+import dev.borisochieng.autocaretag.ui.commons.NavBar
+import dev.borisochieng.autocaretag.ui.navigation.AppRoute
+import dev.borisochieng.autocaretag.ui.navigation.NavActions
 import dev.borisochieng.autocaretag.ui.theme.AutoCareTagTheme
 import org.koin.android.ext.android.inject
 
@@ -23,7 +28,17 @@
 
         enableEdgeToEdge()
         setContent {
-            AutoCareTagTheme {}
+            val navController = rememberNavController()
+
+            AutoCareTagTheme {
+                Scaffold(bottomBar = { NavBar(navController) }) { paddingValues ->
+                    AppRoute(
+                        navActions = NavActions(navController),
+                        navController = navController,
+                        paddingValues = paddingValues
+                    )
+                }
+            }
         }
     }
 
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.5.1\"\r\nkotlin = \"2.0.0\"\r\nktlint = \"12.1.1\"\r\n\r\nactivityCompose = \"1.9.1\"\r\ncomposeBom = \"2024.06.00\"\r\ncoreKtx = \"1.13.1\"\r\ngson = \"2.11.0\"\r\nkoinBom = \"3.6.0-wasm-alpha2\"\r\nlifecycleRuntimeKtx = \"2.8.4\"\r\n\r\nespressoCore = \"3.6.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\ngson = { module = \"com.google.code.gson:gson\", version.ref = \"gson\" }\r\nkoin-android = { module = \"io.insert-koin:koin-android\" }\r\nkoin-bom = { module = \"io.insert-koin:koin-bom\", version.ref = \"koinBom\" }\r\nkoin-core = { module = \"io.insert-koin:koin-core\" }\r\n\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\ncompose-compiler = { id = \"org.jetbrains.kotlin.plugin.compose\", version.ref = \"kotlin\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\nktlint-gradle = { id = \"org.jlleitschuh.gradle.ktlint\", version.ref = \"ktlint\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision beb0145f611c242b4e07bc3d0aa71145621e13f0)
+++ b/gradle/libs.versions.toml	(date 1722251406947)
@@ -9,6 +9,8 @@
 gson = "2.11.0"
 koinBom = "3.6.0-wasm-alpha2"
 lifecycleRuntimeKtx = "2.8.4"
+material3 = "1.2.1"
+navigation = "2.7.7"
 
 espressoCore = "3.6.1"
 junit = "4.13.2"
@@ -23,7 +25,8 @@
 androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
 androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
 androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
-androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
+androidx-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
+compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation" }
 gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
 koin-android = { module = "io.insert-koin:koin-android" }
 koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
Index: app/src/main/res/drawable/add_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/add_icon.xml b/app/src/main/res/drawable/add_icon.xml
new file mode 100644
--- /dev/null	(date 1722252576668)
+++ b/app/src/main/res/drawable/add_icon.xml	(date 1722252576668)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24"
+    android:viewportWidth="24">
+
+        <path android:pathData="M12 5V19M5 12H19"
+            android:strokeColor="#A3A3A3"
+            android:strokeWidth="1.6"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+</vector>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1722191362907)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm_[Changes]/shelved.patch	(date 1722191362907)
@@ -0,0 +1,48 @@
+Index: gradle/libs.versions.toml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>[versions]\r\nagp = \"8.5.1\"\r\nkotlin = \"1.9.0\"\r\n\r\nactivityCompose = \"1.9.0\"\r\ncomposeBom = \"2024.04.01\"\r\ncoreKtx = \"1.13.1\"\r\ngson = \"2.11.0\"\r\nkoinBom = \"3.6.0-wasm-alpha2\"\r\nlifecycleRuntimeKtx = \"2.8.3\"\r\n\r\nespressoCore = \"3.6.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\ngson = { module = \"com.google.code.gson:gson\", version.ref = \"gson\" }\r\nkoin-android = { module = \"io.insert-koin:koin-android\" }\r\nkoin-bom = { module = \"io.insert-koin:koin-bom\", version.ref = \"koinBom\" }\r\nkoin-core = { module = \"io.insert-koin:koin-core\" }\r\n\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+--- a/gradle/libs.versions.toml	(revision 722b4700019277ee16468a7f05422cddf644b5c2)
++++ b/gradle/libs.versions.toml	(date 1722102674432)
+@@ -1,13 +1,14 @@
+ [versions]
+ agp = "8.5.1"
+ kotlin = "1.9.0"
++ktlint = "12.1.1"
+ 
+-activityCompose = "1.9.0"
+-composeBom = "2024.04.01"
++activityCompose = "1.9.1"
++composeBom = "2024.06.00"
+ coreKtx = "1.13.1"
+ gson = "2.11.0"
+ koinBom = "3.6.0-wasm-alpha2"
+-lifecycleRuntimeKtx = "2.8.3"
++lifecycleRuntimeKtx = "2.8.4"
+ 
+ espressoCore = "3.6.1"
+ junit = "4.13.2"
+@@ -36,5 +37,7 @@
+ 
+ [plugins]
+ android-application = { id = "com.android.application", version.ref = "agp" }
++compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
+ jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
++ktlint-gradle = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
+ 
+Index: .idea/.name
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/.name b/.idea/.name
+new file mode 100644
+--- /dev/null	(date 1722102469857)
++++ b/.idea/.name	(date 1722102469857)
+@@ -0,0 +1,1 @@
++TagTidy
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm__Changes_.xml
new file mode 100644
--- /dev/null	(date 1722240819212)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm__Changes_.xml	(date 1722240819212)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm_[Changes]" date="1722191415963" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_07_2024_7_29_pm_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 28/07/2024 7:29 pm [Changes]" />
+</changelist>
\ No newline at end of file
Index: app/src/main/res/drawable/manage_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/manage_icon.xml b/app/src/main/res/drawable/manage_icon.xml
new file mode 100644
--- /dev/null	(date 1722266783049)
+++ b/app/src/main/res/drawable/manage_icon.xml	(date 1722266783049)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="25dp"
+    android:height="24dp"
+    android:viewportHeight="25"
+    android:viewportWidth="24">
+
+        <path android:pathData="M10.5 3H3.5V12H10.5V3Z"
+            android:strokeColor="#A3A3A3"
+            android:strokeWidth="2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M21.5 3H14.5V8H21.5V3Z"
+            android:strokeColor="#A3A3A3"
+            android:strokeWidth="2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M21.5 12H14.5V21H21.5V12Z"
+            android:strokeColor="#A3A3A3"
+            android:strokeWidth="2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+        <path android:pathData="M10.5 16H3.5V21H10.5V16Z"
+            android:strokeColor="#A3A3A3"
+            android:strokeWidth="2"
+            android:strokeLineCap="round"
+            android:strokeLineJoin="round" />
+
+</vector>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm__Changes_.xml
new file mode 100644
--- /dev/null	(date 1722191330401)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm__Changes_.xml	(date 1722191330401)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm_[Changes]" date="1722102471376" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27_07_2024_6_47_pm_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 27/07/2024 6:47 pm [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	(date 1722251427474)
+++ b/.idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]1/shelved.patch	(date 1722251427474)
@@ -0,0 +1,138 @@
+Index: app/build.gradle.kts
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>import org.jlleitschuh.gradle.ktlint.reporter.ReporterType\r\n\r\nplugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.compose.compiler)\r\n    alias(libs.plugins.ktlint.gradle)\r\n}\r\n\r\nandroid {\r\n    namespace = \"dev.borisochieng.tagtidy\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"dev.borisochieng.tagtidy\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\",\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\nktlint {\r\n    android = true\r\n    ignoreFailures = false\r\n    reporters {\r\n        reporter(ReporterType.JSON)\r\n        reporter(ReporterType.HTML)\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    // android\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n\r\n    // compose\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n\r\n    // gson\r\n    implementation(libs.gson)\r\n\r\n    // di\r\n    implementation(libs.koin.android)\r\n    implementation(platform(libs.koin.bom))\r\n    implementation(libs.koin.core)\r\n\r\n    // test\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n\r\n    //Gson\r\n    implementation (libs.gson)\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/build.gradle.kts b/app/build.gradle.kts
+--- a/app/build.gradle.kts	
++++ b/app/build.gradle.kts	
+@@ -75,15 +75,16 @@
+     implementation(libs.androidx.ui.graphics)
+     implementation(libs.androidx.ui.tooling.preview)
+     implementation(libs.androidx.material3)
+-
+-    // gson
+-    implementation(libs.gson)
++    implementation(libs.compose.navigation)
+ 
+     // di
+     implementation(libs.koin.android)
+     implementation(platform(libs.koin.bom))
+     implementation(libs.koin.core)
+ 
++    // gson
++    implementation(libs.gson)
++
+     // test
+     testImplementation(libs.junit)
+     androidTestImplementation(libs.androidx.junit)
+@@ -92,7 +93,4 @@
+     androidTestImplementation(libs.androidx.ui.test.junit4)
+     debugImplementation(libs.androidx.ui.tooling)
+     debugImplementation(libs.androidx.ui.test.manifest)
+-
+-    //Gson
+-    implementation (libs.gson)
+ }
+\ No newline at end of file
+Index: app/src/main/java/dev/borisochieng/tagtidy/utils/AnimationUtils.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/dev/borisochieng/tagtidy/utils/AnimationUtils.kt b/app/src/main/java/dev/borisochieng/tagtidy/utils/AnimationUtils.kt
+new file mode 100644
+--- /dev/null	
++++ b/app/src/main/java/dev/borisochieng/tagtidy/utils/AnimationUtils.kt	
+@@ -0,0 +1,48 @@
++package dev.borisochieng.tagtidy.utils
++
++import androidx.compose.animation.AnimatedContentScope
++import androidx.compose.animation.core.tween
++import androidx.compose.animation.slideInHorizontally
++import androidx.compose.animation.slideInVertically
++import androidx.compose.animation.slideOutHorizontally
++import androidx.compose.runtime.Composable
++import androidx.navigation.NamedNavArgument
++import androidx.navigation.NavBackStackEntry
++import androidx.navigation.NavDeepLink
++import androidx.navigation.NavGraphBuilder
++import androidx.navigation.compose.composable
++import dev.borisochieng.tagtidy.utils.AnimationDirection.LeftRight
++
++// navigation animation
++fun NavGraphBuilder.animatedComposable(
++	route: String,
++	animationDirection: AnimationDirection = LeftRight,
++	arguments: List<NamedNavArgument> = emptyList(),
++	deepLinks: List<NavDeepLink> = emptyList(),
++	content: @Composable AnimatedContentScope.(NavBackStackEntry) -> Unit
++) = composable(
++	route = route,
++	arguments = arguments,
++	deepLinks = deepLinks,
++	enterTransition = {
++		if (animationDirection == LeftRight) {
++			slideInHorizontally(tween(500)) { it }
++		} else {
++			slideInVertically(tween(500)) { it }
++		}
++	},
++	exitTransition = null,
++	popEnterTransition = null,
++	popExitTransition = {
++		if (animationDirection == LeftRight) {
++			slideOutHorizontally(tween(500)) { it }
++		} else {
++			slideOutHorizontally(tween(500)) { it }
++		}
++	},
++	content = content
++)
++
++enum class AnimationDirection {
++	LeftRight, UpDown
++}
+Index: gradle/libs.versions.toml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>[versions]\r\nagp = \"8.5.1\"\r\nkotlin = \"2.0.0\"\r\nktlint = \"12.1.1\"\r\n\r\nactivityCompose = \"1.9.1\"\r\ncomposeBom = \"2024.06.00\"\r\ncoreKtx = \"1.13.1\"\r\ngson = \"2.11.0\"\r\nkoinBom = \"3.6.0-wasm-alpha2\"\r\nlifecycleRuntimeKtx = \"2.8.4\"\r\n\r\nespressoCore = \"3.6.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\ngson = { module = \"com.google.code.gson:gson\", version.ref = \"gson\" }\r\nkoin-android = { module = \"io.insert-koin:koin-android\" }\r\nkoin-bom = { module = \"io.insert-koin:koin-bom\", version.ref = \"koinBom\" }\r\nkoin-core = { module = \"io.insert-koin:koin-core\" }\r\n\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\ncompose-compiler = { id = \"org.jetbrains.kotlin.plugin.compose\", version.ref = \"kotlin\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\nktlint-gradle = { id = \"org.jlleitschuh.gradle.ktlint\", version.ref = \"ktlint\" }\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+--- a/gradle/libs.versions.toml	
++++ b/gradle/libs.versions.toml	
+@@ -9,6 +9,8 @@
+ gson = "2.11.0"
+ koinBom = "3.6.0-wasm-alpha2"
+ lifecycleRuntimeKtx = "2.8.4"
++material3 = "1.2.1"
++navigation = "2.7.7"
+ 
+ espressoCore = "3.6.1"
+ junit = "4.13.2"
+@@ -23,7 +25,8 @@
+ androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
+ androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
+ androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
+-androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
++androidx-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
++compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation" }
+ gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
+ koin-android = { module = "io.insert-koin:koin-android" }
+ koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
+Index: .idea/.name
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/.name b/.idea/.name
+new file mode 100644
+--- /dev/null	
++++ b/.idea/.name	
+@@ -0,0 +1,1 @@
++TagTidy
+\ No newline at end of file
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt
new file mode 100644
--- /dev/null	(date 1722266873817)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/commons/AppBars.kt	(date 1722266873817)
@@ -0,0 +1,121 @@
+package dev.borisochieng.autocaretag.ui.commons
+
+import android.annotation.SuppressLint
+import androidx.annotation.DrawableRes
+import androidx.annotation.StringRes
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.padding
+import androidx.compose.material3.Icon
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.collectAsState
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.painter.Painter
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.res.stringResource
+import androidx.compose.ui.unit.dp
+import androidx.navigation.NavController
+import androidx.navigation.NavGraph.Companion.findStartDestination
+import androidx.navigation.compose.currentBackStackEntryAsState
+import dev.borisochieng.autocaretag.R
+import dev.borisochieng.autocaretag.ui.navigation.AppRoute
+import dev.borisochieng.autocaretag.ui.theme.AutoCareTheme.colorScheme
+
+@SuppressLint("RestrictedApi")
+@Composable
+fun NavBar(
+	navController: NavController,
+	modifier: Modifier = Modifier
+) {
+	val navBackStackEntry = navController.currentBackStackEntryAsState()
+	val currentRoute = navBackStackEntry.value?.destination?.route
+	val backStack = navController.currentBackStack.collectAsState().value.map { it.destination.route }
+
+	Row(
+		modifier = modifier
+			.fillMaxWidth()
+			.padding(16.dp, 6.dp),
+		horizontalArrangement = Arrangement.Center,
+		verticalAlignment = Alignment.CenterVertically
+	) {
+		NavBarItems.entries.forEach { item ->
+			val inBackStack = item.route == currentRoute || item.route in backStack
+			val selected = when (item) {
+				NavBarItems.Home -> {
+					val noHomeScreenInStack = NavBarItems.entries.filter { it != NavBarItems.Home }
+						.all { it.route !in backStack }
+					inBackStack && noHomeScreenInStack
+				}
+				else -> inBackStack
+			}
+
+			NavigationBarItem(
+				selected = selected,
+				icon = painterResource(item.icon),
+				label = stringResource(item.title),
+				onClick = {
+					navController.navigate(item.route) {
+						popUpTo(navController.graph.findStartDestination().id) {
+							saveState = item.route != currentRoute
+						}
+						launchSingleTop = true
+						restoreState = true
+					}
+				}
+			)
+		}
+	}
+}
+
+@Composable
+private fun NavigationBarItem(
+	selected: Boolean,
+	icon: Painter,
+	label: String,
+	modifier: Modifier = Modifier,
+	onClick: () -> Unit
+) {
+	val color = if (selected) colorScheme.primary else colorScheme.onBackgroundVariant
+
+	Column(
+		modifier = modifier
+			.padding(horizontal = 8.dp)
+			.clickable { onClick() },
+		horizontalAlignment = Alignment.CenterHorizontally
+	) {
+		Icon(
+			painter = icon,
+			contentDescription = label,
+			modifier = Modifier.padding(start = 12.5.dp, end = 12.5.dp, bottom = 4.dp),
+			tint = color
+		)
+		Text(text = label, color = color)
+	}
+}
+
+private enum class NavBarItems(
+	@StringRes val title: Int,
+	@DrawableRes val icon: Int,
+	val route: String
+) {
+	Home(
+		title = R.string.home,
+		icon = R.drawable.home_icon,
+		route = AppRoute.HomeScreen.route
+	),
+	Add(
+		title = R.string.add,
+		icon = R.drawable.add_icon,
+		route = AppRoute.AddScreen.route
+	),
+	Manage(
+		title = R.string.manage,
+		icon = R.drawable.manage_icon,
+		route = AppRoute.ManageScreen.route
+	)
+}
Index: app/src/main/java/dev/borisochieng/autocaretag/utils/AnimationUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/utils/AnimationUtils.kt b/app/src/main/java/dev/borisochieng/autocaretag/utils/AnimationUtils.kt
new file mode 100644
--- /dev/null	(date 1722252166575)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/utils/AnimationUtils.kt	(date 1722252166575)
@@ -0,0 +1,48 @@
+package dev.borisochieng.autocaretag.utils
+
+import androidx.compose.animation.AnimatedContentScope
+import androidx.compose.animation.core.tween
+import androidx.compose.animation.slideInHorizontally
+import androidx.compose.animation.slideInVertically
+import androidx.compose.animation.slideOutHorizontally
+import androidx.compose.runtime.Composable
+import androidx.navigation.NamedNavArgument
+import androidx.navigation.NavBackStackEntry
+import androidx.navigation.NavDeepLink
+import androidx.navigation.NavGraphBuilder
+import androidx.navigation.compose.composable
+import dev.borisochieng.autocaretag.utils.AnimationDirection.LeftRight
+
+// navigation animation
+fun NavGraphBuilder.animatedComposable(
+	route: String,
+	animationDirection: AnimationDirection = LeftRight,
+	arguments: List<NamedNavArgument> = emptyList(),
+	deepLinks: List<NavDeepLink> = emptyList(),
+	content: @Composable AnimatedContentScope.(NavBackStackEntry) -> Unit
+) = composable(
+	route = route,
+	arguments = arguments,
+	deepLinks = deepLinks,
+	enterTransition = {
+		if (animationDirection == LeftRight) {
+			slideInHorizontally(tween(500)) { it }
+		} else {
+			slideInVertically(tween(500)) { it }
+		}
+	},
+	exitTransition = null,
+	popEnterTransition = null,
+	popExitTransition = {
+		if (animationDirection == LeftRight) {
+			slideOutHorizontally(tween(500)) { it }
+		} else {
+			slideOutHorizontally(tween(500)) { it }
+		}
+	},
+	content = content
+)
+
+enum class AnimationDirection {
+	LeftRight, UpDown
+}
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1722251427304)
+++ b/.idea/shelf/Uncommitted_changes_before_Merge_at_29_07_2024_12_08_pm_[Changes]/shelved.patch	(date 1722251427304)
@@ -0,0 +1,20 @@
+Index: app/src/main/java/dev/borisochieng/tagtidy/nfc_reader/repository/NFCReaderRepository.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package dev.borisochieng.tagtidy.nfc_reader.repository\r\n\r\nimport android.content.Intent\r\nimport android.nfc.NdefMessage\r\nimport android.nfc.NdefRecord\r\nimport android.nfc.NfcAdapter\r\nimport com.google.gson.Gson\r\nimport dev.borisochieng.tagtidy.nfc_reader.data.LaundryInfo\r\nimport dev.borisochieng.tagtidy.nfc_reader.data.State\r\n\r\nclass NFCReaderRepository {\r\n\r\n\tfun readNFCTag(intent: Intent): State<LaundryInfo> {\r\n//\t\tval tag = intent.getParcelableExtra<Tag>(NfcAdapter.EXTRA_TAG)\r\n\t\tval ndefMessage = intent.getParcelableArrayExtra(NfcAdapter.EXTRA_NDEF_MESSAGES)\r\n\t\tndefMessage?.forEach { message ->\r\n\t\t\t(message as NdefMessage).records.forEach { record ->\r\n\t\t\t\tif (\r\n\t\t\t\t\trecord.tnf == NdefRecord.TNF_WELL_KNOWN &&\r\n\t\t\t\t\trecord.type.contentEquals(NdefRecord.RTD_TEXT)\r\n\t\t\t\t) {\r\n\t\t\t\t\tval payload = record.payload\r\n\t\t\t\t\tval jsonString = String(payload, Charsets.UTF_8)\r\n\t\t\t\t\tval gson = Gson()\r\n\t\t\t\t\tval laundryInfo = gson.fromJson(jsonString, LaundryInfo::class.java)\r\n\t\t\t\t\treturn State.Success(laundryInfo)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn State.Error(\"Unable to read tag\")\r\n\t}\r\n\r\n}
+===================================================================
+diff --git a/app/src/main/java/dev/borisochieng/tagtidy/nfc_reader/repository/NFCReaderRepository.kt b/app/src/main/java/dev/borisochieng/tagtidy/nfc_reader/repository/NFCReaderRepository.kt
+--- a/app/src/main/java/dev/borisochieng/tagtidy/nfc_reader/repository/NFCReaderRepository.kt	
++++ b/app/src/main/java/dev/borisochieng/tagtidy/nfc_reader/repository/NFCReaderRepository.kt	
+@@ -13,8 +13,9 @@
+ 	fun readNFCTag(intent: Intent): State<LaundryInfo> {
+ //		val tag = intent.getParcelableExtra<Tag>(NfcAdapter.EXTRA_TAG)
+ 		val ndefMessage = intent.getParcelableArrayExtra(NfcAdapter.EXTRA_NDEF_MESSAGES)
+-		ndefMessage?.forEach { message ->
+-			(message as NdefMessage).records.forEach { record ->
++		ndefMessage?.also { rawMessages ->
++			val message = rawMessages.map { it as NdefMessage }
++			message[0].records.forEach { record ->
+ 				if (
+ 					record.tnf == NdefRecord.TNF_WELL_KNOWN &&
+ 					record.type.contentEquals(NdefRecord.RTD_TEXT)
Index: app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt
new file mode 100644
--- /dev/null	(date 1722266873666)
+++ b/app/src/main/java/dev/borisochieng/autocaretag/ui/navigation/NavActions.kt	(date 1722266873666)
@@ -0,0 +1,81 @@
+package dev.borisochieng.autocaretag.ui.navigation
+
+import androidx.navigation.NavHostController
+
+class NavActions(private val navController: NavHostController) {
+
+	fun navigate(screen: Screens) {
+		when (screen) {
+			Screens.HomeScreen -> navigateToHomeScreen()
+			Screens.AddScreen -> navigateToAddScreen()
+			is Screens.AddRepairDetailsScreen -> navigateToAddRepairDetailsScreen(screen.vehicleId)
+			Screens.ManageScreen -> navigateToManageScreen()
+			Screens.ClientDetailsScreen -> navigateToClientDetailsScreen()
+			is Screens.VehicleDetailsScreen -> navigateToVehicleDetailsScreen(screen.clientId)
+			is Screens.RepairHistoryScreen -> navigateToRepairHistoryScreen(screen.vehicleId)
+			Screens.Back -> navController.navigateUp()
+		}
+	}
+
+	private fun navigateToHomeScreen() {
+		navController.navigate(AppRoute.HomeScreen.route)
+	}
+
+	private fun navigateToAddScreen() {
+		navController.navigate(AppRoute.AddScreen.route)
+	}
+
+	private fun navigateToAddRepairDetailsScreen(vehicleId: String) {
+		navController.navigate(
+			AppRoute.AddRepairDetailsScreen.routeWithId(vehicleId)
+		)
+	}
+
+	private fun navigateToManageScreen() {
+		navController.navigate(AppRoute.ManageScreen.route)
+	}
+
+	private fun navigateToClientDetailsScreen() {
+		navController.navigate(AppRoute.ClientDetailsScreen.route)
+	}
+
+	private fun navigateToVehicleDetailsScreen(clientId: String) {
+		navController.navigate(
+			AppRoute.VehicleDetailsScreen.routeWithId(clientId)
+		)
+	}
+
+	private fun navigateToRepairHistoryScreen(vehicleId: String) {
+		navController.navigate(
+			AppRoute.RepairHistoryScreen.routeWithId(vehicleId)
+		)
+	}
+
+}
+
+sealed class AppRoute(val route: String) {
+	data object HomeScreen: AppRoute("home_screen")
+	data object AddScreen: AppRoute("add_screen")
+	data object AddRepairDetailsScreen: AppRoute("add_repair_details_screen/{vehicleId}") {
+		fun routeWithId(vehicleId: String) = String.format("add_repair_details_screen/%s", vehicleId)
+	}
+	data object ManageScreen: AppRoute("manage_screen")
+	data object ClientDetailsScreen: AppRoute("client_details_screen")
+	data object VehicleDetailsScreen: AppRoute("vehicle_details_screen/{clientId}") {
+		fun routeWithId(clientId: String) = String.format("vehicle_details_screen/%s", clientId)
+	}
+	data object RepairHistoryScreen: AppRoute("repair_history_screen/{vehicleId}") {
+		fun routeWithId(vehicleId: String) = String.format("repair_details_screen/%s", vehicleId)
+	}
+}
+
+sealed class Screens {
+	data object HomeScreen : Screens()
+	data object AddScreen : Screens() // This is the `add client` screen
+	data class AddRepairDetailsScreen(val vehicleId: String) : Screens()
+	data object ManageScreen : Screens()
+	data object ClientDetailsScreen : Screens()
+	data class VehicleDetailsScreen(val clientId: String) : Screens()
+	data class RepairHistoryScreen(val vehicleId: String) : Screens()
+	data object Back : Screens()
+}
